<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="smali_help_names">
		<item>မှတ်ပုံတင်များ</item>
		<item>ပကတိတန်ဖိုးများ</item>
		<item>ပဏာမဒေတာအမျိုးအစားများ</item>
	</string-array>
	<string-array name="smali_help_values" formatted="false">
		<item>vA သည် value range v0 - v15 ပါရှိသော 4-bit register တစ်ခုဖြစ်သည်။\nvAA သည် v0 - v255 တန်ဖိုးအကွာအဝေးရှိသော 8-bit မှတ်ပုံတင်တစ်ခုဖြစ်သည်။\nvAAAA သည် v0 - v65535 တန်ဖိုးအကွာအဝေးရှိသော 16-bit မှတ်ပုံတင်တစ်ခုဖြစ်သည်။</item>
		<item>0xF, 0xFF စသဖြင့် သုံးပါတယ်။ ပကတိတန်ဖိုးများကို ကိုယ်စားပြုရန်။ မှတ်ပုံတင်များကဲ့သို့ပင်၊ ဥပမာ၊ တန်ဖိုးများစွာကို ကိုယ်စားပြုရန်အတွက် နံပါတ် F ကို အသုံးပြုသည်-\n0xF တန်ဖိုးများ၏ အကွာအဝေးကို [-0x8, 0x7] ဖြင့် ကိုယ်စားပြုသည်\n0xFF ၏ တန်ဖိုးများ အကွာအဝေးကို [-0x80, 0x7F] ဖြင့် ကိုယ်စားပြုသည်</item>
		<item>V - void၊ Z - boolean၊ B - byte\nC - char, S - short, I - int\nJ - long, F - float, D - နှစ်ဆ\nvoid- ပြန်ပေးသည့်အမျိုးအစားများအတွက်သာ အသုံးပြုနိုင်သည်။\nboolean- တန်ဖိုးကို မှန်သည်ဖြစ်စေ၊ မှားသည်ဖြစ်စေ သိမ်းဆည်းသည်\nbyte- ကိန်းပြည့် -128 မှ 127 အထိ သိမ်းထားပြီး 1 byte ကို သိမ်းပိုက်သည်\nအတိုကောက်- ကိန်းပြည့် -32768 မှ 32767 အထိ သိမ်းထားပြီး 2 bytes ယူသည်။\nint သည် -2147483648 မှ 2147483647 မှ ကိန်းပြည့်တစ်ခုကို သိမ်းဆည်းပြီး 4 bytes ကိုယူသည်\nအရှည်--9223372036854775808 မှ 9223372036854775807 မှ ကိန်းပြည့်ကို သိမ်းထားပြီး 8 bytes ရှိသည်\nနှစ်ဆ- ရေပေါ်အမှတ်နံပါတ်ကို ±4.9*10³²⁴မှ ±1.7976931348623157*10³⁰⁸ သိမ်းဆည်းထားပြီး 8 bytes ယူပါသည်။ အစက်ကို ဒဿမခွဲခြမ်းစိတ်ဖြာမှုအဖြစ် သုံးသည်။\nfloat- ရေပေါ်အမှတ်နံပါတ်ကို -3.4*10³⁸ မှ 3.4*10³⁸ အထိ သိမ်းဆည်းထားပြီး 4 bytes ယူပါသည်။\nchar- သည် UTF-16 ကုဒ်ပြောင်းခြင်းတွင် စာလုံးတစ်လုံးတည်းကို သိမ်းဆည်းထားပြီး 2 bytes ရှိသည်၊ ထို့ကြောင့် သိမ်းဆည်းထားသော တန်ဖိုးများ၏ အကွာအဝေးမှာ 0 မှ 65535 ဖြစ်သည်။</item>
		<item>လုပ်ဆောင်ချက်မရှိပါ။</item>
		<item>vA မှတ်ပုံတင်ရန် register vB ၏တန်ဖိုးကို ရွှေ့ပါ။</item>
		<item>vBBBB မှတ်ပုံတင်ခြင်းတန်ဖိုးကို vAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>vBBBB မှတ်ပုံတင်ခြင်းတန်ဖိုးကို vAAAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>အတွဲ vA၊ vA+1 မှတ်ပုံတင်ရန် မှတ်ပုံတင်အတွဲ (vB၊ vB+1) ၏ ရှည်/နှစ်ထပ်တန်ဖိုးကို ရွှေ့ပါ။</item>
		<item>မှတ်ပုံတင်အတွဲ (vBBBB၊ vBBBB+1) ၏ရှည်/နှစ်ထပ်တန်ဖိုးကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 သို့ ရွှေ့ပါ။</item>
		<item>မှတ်ပုံတင်အတွဲ (vBBBB၊ vBBBB+1) ၏ ရှည်/နှစ်ထပ်တန်ဖိုးကို vAAAA၊ vAAAA+1 မှတ်ပုံတင်အတွဲသို့ ရွှေ့ပါ။</item>
		<item>vB မှတ်ပုံတင်မှ အရာဝတ္တုတစ်ခုကို ရည်ညွှန်းချက် vA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>vBBBB မှတ်ပုံတင်မှ အရာဝတ္တုတစ်ခုကို ရည်ညွှန်းချက်တစ်ခုအား vAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>vBBBB မှတ်ပုံတင်မှ အရာဝတ္တုတစ်ခုကို ရည်ညွှန်းချက်တစ်ခုအား vAAAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>ယခင်ကခေါ်သည့်နည်းလမ်း၏ ပြန်တန်ဖိုးကို vAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>ယခင်ကခေါ်သည့်နည်းလမ်းဖြင့် ပြန်ပေးထားသော ရှည်/နှစ်ထပ်တန်ဖိုးကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 သို့ ရွှေ့ပါ။</item>
		<item>ယခင်ကခေါ်သည့်နည်းလမ်းဖြင့် ပြန်ပေးထားသော အရာဝတ္ထုကိုးကားချက်ကို vAA မှတ်ပုံတင်သို့ ရွှေ့ပါ။</item>
		<item>နည်းလမ်းခေါ်ဆိုမှု (လုပ်ဆောင်နေစဉ်) တွင် ထုတ်ထားသော ဖယ်ထုတ်ထားသော အရာအား ရည်ညွှန်းချက်ကို vAA မှတ်ပုံတင်ခြင်းသို့ ရွှေ့ပါ။</item>
		<item>တန်ဘိုးမရှိဘဲ ပြန်ပေးသည်။</item>
		<item>vAA မှတ်ပုံတင်မှ တန်ဖိုးကို ပြန်ပေးခြင်းဖြင့် ပြန်ပါ။</item>
		<item>vAA၊ vAA+1 မှတ်ပုံတင်တစ်စုံသို့ နှစ်ဆ/ရှည်တန်ဖိုးကို ပြန်ပေးခြင်းဖြင့် ပြန်ပေးပါ။</item>
		<item>vAA မှတ်ပုံတင်မှ အရာဝတ္ထုရည်ညွှန်းချက်တန်ဖိုးကို ပြန်ပေးခြင်းဖြင့် ပြန်သွားပါ။</item>
		<item>4-bit constant ကို vA register တွင် နေရာချပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် 16-bit ကိန်းသေကို ထည့်ပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် ကိန်းပြည့်ကိန်းသေတစ်ခုကို ထည့်ပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်း၏ အထက်ဘစ်များတွင် 16-ဘစ်ကိန်းသေကို ထားရှိပါ။ float (floating point) တန်ဖိုးများကို စတင်ရန် အသုံးပြုသည်။</item>
		<item>16-bit integer constant ကို register pair vAA၊ vAA+1 တွင် ထားရှိကာ ကိန်းသေကို ရှည်လျားသော ကိန်းသေအဖြစ်သို့ ပြောင်းပေးသည်။</item>
		<item>32-bit integer constant ကို register pair vAA၊ vAA+1 တွင် ထားရှိကာ ကိန်းသေကို ရှည်လျားသော ကိန်းသေအဖြစ်သို့ ပြောင်းလဲပေးသည်။</item>
		<item>register pair vAA, vAA+1 တွင် 64-bit constant ကို ထည့်ပါ။</item>
		<item>မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 ၏ ထိပ်တန်း 16-bits တွင် 16-bit အဆက်မပြတ်ကို နေရာချပါ။ နှစ်ဆ (floating point) တန်ဖိုးများကို စတင်ရန် အသုံးပြုသည်။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် သတ်မှတ်ထားသော စာကြောင်းကို ကိုးကားပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် သတ်မှတ်ထားသော စာကြောင်းကို ကိုးကားပါ။</item>
		<item>string_id မှသတ်မှတ်ထားသော string_id မှ ရည်ညွှန်းချက်တစ်ခုကို vAA မှတ်ပုံတင်ခြင်းထဲသို့ ထည့်ပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းဖြင့် ရည်ညွှန်းထားသော အရာဝတ္ထုမော်နီတာကို ရယူပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းဖြင့် ရည်ညွှန်းထားသော အရာဝတ္ထုမော်နီတာကို ထုတ်ပေးသည်။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင်ပါရှိသော အရာဝတ္ထုကိုးကားချက်ကို type_id မှသတ်မှတ်ထားသော အတန်းသို့ ကာစ်ပေးနိုင်ခြင်းရှိမရှိ စစ်ဆေးပါ။ မလုပ်နိုင်ပါက ClassCastException တစ်ခုကို ပစ်ချလိုက်သည်၊ သို့မဟုတ်ပါက ဆက်လက်လုပ်ဆောင်နေပါသည်။</item>
		<item>vB မှတ်ပုံတင်ခြင်း၏ အကြောင်းအရာများသည် type_id မှသတ်မှတ်ထားသော အတန်း၏ဥပမာတစ်ခုဟုတ်မဟုတ် စစ်ဆေးပါ။ စာရင်းသွင်း vA ကို ပစ္စုပ္ပန်ဖြစ်လျှင် 0 မဟုတ်ပါက သုညမဟုတ်ဟု သတ်မှတ်သည်။\nvA = vB instanceOf type ? ၁၀</item>
		<item>vB မှတ်ပုံတင်ခြင်းမှ array အစိတ်အပိုင်းများ၏ အရေအတွက်ကို သတ်မှတ်ပြီး vA မှတ်ပုံတင်ခြင်းတွင် တန်ဖိုးကို နေရာချပေးသည်။\nvA = vB.အရှည်</item>
		<item>အရာဝတ္ထုအမျိုးအစားတစ်ခု၏ စံနမူနာတစ်ခုကို ဖန်တီးပြီး vAA မှတ်ပုံတင်မှုတွင် ဖန်တီးထားသော စံနမူနာကို အကိုးအကားထားစေသည်။</item>
		<item>register vB ဒြပ်စင်များ၏ အရွယ်အစားဖြင့် type_id variable များ၏ array အသစ်တစ်ခုကို ဖန်တီးပြီး register vA တွင် array ကို ရည်ညွှန်းထားသည်။</item>
		<item>type_id ၏ data array အသစ်တစ်ခုဖန်တီးပြီး ၎င်းကို parameters များဖြင့်ဖြည့်ပါ (ဆိုလိုတာက ရှည်လျားသော/နှစ်ထပ် array များမရှိသော်လည်း ကိုးကားမှုအမျိုးအစားများကို ခွင့်ပြုထားသည်)။ အသစ်ဖန်တီးထားသော array အား ကိုးကားချက်ကို ဤထုတ်ပြန်ချက်အပြီးတွင် ချက်ချင်း (တစ်ခုအသုံးပြုရမည်ဆိုပါက) move-result-object statement ကို အသုံးပြု၍ ရရှိနိုင်သည်။</item>
		<item>type_id ၏ data array အသစ်တစ်ခုဖန်တီးပြီး ၎င်းကို ဘောင်အကွာအဝေးများဖြင့် ဖြည့်ပေးသည် (ဆိုလိုတာက ရှည်လျားသော/နှစ်ထပ် array များမဟုတ်သော်လည်း ကိုးကားမှုအမျိုးအစားများကို လက်ခံနိုင်သည်)။ အသစ်ဖန်တီးထားသော array အား ကိုးကားချက်ကို ဤထုတ်ပြန်ချက်အပြီးတွင် ချက်ချင်း (တစ်ခုအသုံးပြုရမည်ဆိုပါက) move-result-object statement ကို အသုံးပြု၍ ရရှိနိုင်သည်။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် ရည်ညွှန်းထားသော array ကို static data ဖြင့်ဖြည့်ပါ။ ဒေတာတည်နေရာသည် လက်ရှိညွှန်ကြားချက်၏ အနေအထားနှင့် အော့ဖ်ဆက်၏ ပေါင်းလဒ်ဖြစ်သည်။</item>
		<item>ခြွင်းချက်အရာဝတ္ထုတစ်ခုကို ပစ်ချပါ။ vAA မှတ်ပုံတင်ရှိ ခြွင်းချက်အရာဝတ္တုကို ရည်ညွှန်းခြင်း။</item>
		<item>ခြွင်းချက်မရှိ တိုတောင်းသော (ကိန်းပြည့်) 8-bit offset သို့ ခုန်ဆင်းပါ။</item>
		<item>16-bit offset သို့ ခြွင်းချက်မရှိ ခုန်ပါ။</item>
		<item>32-bit offset သို့ ခြွင်းချက်မရှိ ခုန်ပါ။</item>
		<item>ထိန်းချုပ်မှုကိန်းသေများကို တစ်ခုနှင့်တစ်ခု (အတန်းထဲတွင်) နီးကပ်နေသောအခါတွင် Switch အော်ပရေတာအား အကောင်အထည်ဖော်ပါ။ ညွှန်ကြားချက်သည် အညွှန်းဇယားကို အသုံးပြုသည်။ ကိစ္စရပ်တစ်ခုအတွက် ညွှန်ကြားချက် offset ကို vAA အညွှန်းဖြင့် ဆုံးဖြတ်သည်။ vAA အညွှန်းသည် ဇယားထက်ကျော်လွန်သွားပါက၊ လုပ်ဆောင်ချက်သည် နောက်ဖော်ပြချက် (မူလ) ဖြင့် ဆက်လက်လုပ်ဆောင်သည်။</item>
		<item>ဇယားကျဲသည့်ကိစ္စတွင် Switch အော်ပရေတာအား အကောင်အထည်ဖော်ပါ။ ညွှန်ကြားချက်သည် ကိန်းသေတစ်ခုစီအတွက် အော့ဖ်ဆက်များကို သတ်မှတ်သည့် ဇယားကို အသုံးပြုသည်။ ဇယားတွင် ကိုက်ညီမှု မတွေ့ပါက နောက်ထုတ်ပြန်ချက် (မူလကိစ္စ) ကို လုပ်ဆောင်ပါသည်။</item>
		<item>vBB နှင့် vCC ရှိ float (floating point) တန်ဖိုးများကို နှိုင်းယှဉ်ပြီး vAA မှတ်ပုံတင်ခြင်းတွင် ကိန်းပြည့်တန်ဖိုးကို နေရာချသည်-\nvAA = vBB &lt; vCC ? yes: 1၊ no: -1၊ equal: 0</item>
		<item>vBB နှင့် vCC ရှိ float (floating point) တန်ဖိုးများကို နှိုင်းယှဉ်ပြီး vAA မှတ်ပုံတင်ခြင်းတွင် ကိန်းပြည့်တန်ဖိုးကို နေရာချသည်-\nvAA = vBB &lt; vCC ? yes: 1၊ no: -1၊ equal: 0</item>
		<item>vBB နှင့် vCC ရှိ နှစ်ဆ (floating point) တန်ဖိုးများကို နှိုင်းယှဉ်ပြီး vAA မှတ်ပုံတင်ခြင်းတွင် ကိန်းပြည့်တန်ဖိုးကို နေရာချသည်-\nvAA = (vBB၊ vBB+1) &lt; (vCC၊ vCC+1) ? y\nyes: 1၊ no: -1၊ equal: 0</item>
		<item>vBB နှင့် vCC ရှိ နှစ်ဆ (floating point) တန်ဖိုးများကို နှိုင်းယှဉ်ပြီး vAA မှတ်ပုံတင်ခြင်းတွင် ကိန်းပြည့်တန်ဖိုးကို နေရာချသည်-\nvAA = (vBB၊ vBB+1) > (vCC၊ vCC+1) ? yes: 1၊ no: -1၊ equal: 0</item>
		<item>vBB နှင့် vCC ရှိ ရှည်လျားသော (ကိန်းပြည့်) တန်ဖိုးများကို နှိုင်းယှဉ်ပြီး vAA မှတ်ပုံတင်မှုတွင် ကိန်းပြည့် (integer) တန်ဖိုးကို နေရာချသည်-\nvAA = (vBB၊ vBB+1) > (vCC၊ vCC+1) ? yes: 1၊ no: -1၊ equal: 0</item>
		<item>vA == vB ဆိုလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်ပါ။ vA နှင့် vB တွင် ကိန်းပြည့်တန်ဖိုးများ ပါဝင်သည်။\n(eq သည် Equals ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vA != vB ဆိုလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။ vA နှင့် vB တွင် ကိန်းပြည့်တန်ဖိုးများ ပါဝင်သည်။\n(ne သည် Not Equals ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vA &lt; vB ဆိုလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။ vA နှင့် vB တွင် ကိန်းပြည့်တန်ဖိုးများ ပါဝင်သည်။\n(Less Than ရဲ့ အတိုကောက် ဖြစ်ပါတယ်)</item>
		<item>vA ရှိပါက သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်ပါ။</item>
		<item>vA > vB ဖြစ်လျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။ vA နှင့် vB တွင် ကိန်းပြည့်တန်ဖိုးများ ပါဝင်သည်။\n(gt သည် Greater Than/More Than ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vA >= vB ဖြစ်လျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။ vA နှင့် vB တွင် ကိန်းပြည့်တန်ဖိုးများ ပါဝင်သည်။\n(ge သည် Greater than or Equal ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vAA == 0. vAA တွင် ကိန်းပြည့်တန်ဖိုးပါရှိလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။\n(eqz သည် Equals to Zero ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vAA != 0. vAA တွင် ကိန်းပြည့်တန်ဖိုးပါရှိလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။\n(nez သည် Not Equals to Zero ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vAA &lt; 0. vAA တွင် ကိန်းပြည့်တန်ဖိုးပါရှိလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။\n(ltz သည် Less Than Zero ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vAA ရှိလျှင် သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်ပါ။</item>
		<item>vAA > 0။ vAA တွင် ကိန်းပြည့်တန်ဖိုးပါနေပါက သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်သွားပါမည်။\n(gtz သည် Greater Than Zero ၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vAA >= 0။ vAA တွင် ကိန်းပြည့်တန်ဖိုးပါနေပါက သတ်မှတ်ထားသော အညွှန်းသို့ ခုန်တက်သည်။\n(gez သည် ပိုကြီးသည် သို့မဟုတ် သုညနှင့် ညီမျှခြင်း၏ အတိုကောက်ဖြစ်သည်)</item>
		<item>vBB တွင်ကိုးကားထားသော array မှ vCC တွင်ပါရှိသောအညွှန်းတွင် ကိန်းပြည့်တန်ဖိုးကိုရယူပြီး vAA မှတ်ပုံတင်မှုတွင်ထည့်ပါ။\nvAA = vBB[vCC]</item>
		<item>vBB တွင် ကိုးကားထားသော array မှ vCC ပါရှိသော အညွှန်းတွင် ရယူပြီး နှစ်ဆ/ရှည်သော တန်ဖိုးကို မှတ်ပုံတင်တွဲ vAA၊ vAA+1 တွင် နေရာပေးသည်။\n(vAA၊ vAA+1) = vBB[vCC]</item>
		<item>vCC တွင်ပါရှိသော အညွှန်းတွင်၊ vBB တွင်ရည်ညွှန်းထားသော array မှ၊ အရာဝတ္တုကိုရည်ညွှန်းပြီး vAA မှတ်ပုံတင်မှုတွင် နေရာပေးသည်။\nvAA = vBB[vCC]</item>
		<item>vBB တွင် ကိုးကားထားသော array မှ vCC ပါရှိသော အညွှန်းတွင်၊ boolean တန်ဖိုးတစ်ခုကို ရယူပြီး vAA မှတ်ပုံတင်မှုတွင် နေရာယူသည်။\nvAA = vBB[vCC]</item>
		<item>vCC တွင်ပါရှိသော အညွှန်းတွင်၊ vBB တွင်ကိုးကားထားသော array မှ၊ byte (integer) တန်ဖိုးကို ထုတ်ယူပြီး vAA မှတ်ပုံတင်မှုတွင် နေရာပေးသည်။\nvAA = vBB[vCC]</item>
		<item>vCC တွင်ပါရှိသောအညွှန်းတွင်၊ vBB တွင်ကိုးကားထားသော array မှ char value ကိုရယူပြီး vAA မှတ်ပုံတင်မှုတွင်ထည့်သည်။\nvAA = vBB[vCC]</item>
		<item>vCC တွင်ပါရှိသော အညွှန်းတွင်၊ vBB တွင် ကိုးကားထားသော array မှ၊ အတို (integer) တန်ဖိုးကို ထုတ်ယူပြီး vAA မှတ်ပုံတင်မှုတွင် နေရာပေးသည်။\nvAA = vBB[vCC]</item>
		<item>vAA မှ ကိန်းပြည့်တန်ဖိုးကို vBB တွင် ရည်ညွှန်းထားသော array တွင် vCC မှတ်ပုံတင်ခြင်းပါရှိသော ဒြပ်စင်ဖြင့် နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 မှ နှစ်ဆ/ရှည်တန်ဖိုးကို vBB တွင် ကိုးကားထားသော array ထဲသို့ vCC မှတ်ပုံတင်ခြင်းပါရှိသော ဒြပ်စင်ဖြင့် ထည့်ပါ။\nvBB[vCC] = (vAA၊ vAA+1)</item>
		<item>vAA မှ အရာဝတ္တုတစ်ခုအား ကိုးကားချက်တစ်ခုကို vBB တွင် ရည်ညွှန်းထားသော array ထဲသို့ vCC မှတ်ပုံတင်သည့်ဒြပ်စင်တစ်ခုဖြင့် နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>vAA မှ boolean တန်ဖိုးကို vBB မှ ရည်ညွှန်းထားသော array တွင် vCC မှတ်ပုံတင်ခြင်းပါရှိသော ဒြပ်စင်ဖြင့် နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>vAA မှ byte (ကိန်းပြည့်) တန်ဖိုးကို vBB တွင် ရည်ညွှန်းထားသော array တွင် register vCC ပါရှိသော အစိတ်အပိုင်းဖြင့် နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>vAA မှ char (အက္ခရာ) တန်ဖိုးကို vBB တွင် မှတ်ပုံတင်ထားသော vCC ဖြင့် အစိတ်အပိုင်းအလိုက် vBB တွင်ကိုးကားထားသော array သို့ နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>vAA မှ တိုတောင်းသော (ကိန်းပြည့်) တန်ဖိုးကို vBB တွင် ရည်ညွှန်းထားသော array တွင် vCC မှတ်ပုံတင်ခြင်းပါရှိသော ဒြပ်စင်ဖြင့် နေရာချပါ။\nvBB[vCC] = vAA</item>
		<item>instance အကွက်မှတန်ဖိုးကိုဖတ်ပြီး vA မှတ်ပုံတင်မှုတွင်ထည့်ပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>ဥပမာအကွက်တစ်ခုမှ နှစ်ဆ/ရှည်တန်ဖိုးကို ဖတ်ပြီး မှတ်ပုံတင်တစ်စုံ (vA၊ vA+1) တွင် ထားရှိပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\n(vA၊ vA+1) = vB.field</item>
		<item>instance အကွက်တစ်ခုမှ အရာဝတ္ထုတစ်ခုကို ကိုးကားဖတ်ပြီး vA မှတ်ပုံတင်မှုတွင် ထားရှိပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>instance အကွက်မှ boolean တန်ဖိုးကို ဖတ်ပြီး vA register တွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>instance အကွက်မှ byte (ကိန်းပြည့်) တန်ဖိုးကို ဖတ်ပြီး vA မှတ်ပုံတင်မှုတွင် ထားပေးသည်။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>instance အကွက်တစ်ခုမှ char တန်ဖိုးကို ဖတ်ပြီး vA မှတ်ပုံတင်မှုတွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>ဥပမာ အကွက်တစ်ခုမှ အတို (ကိန်းပြည့်) တန်ဖိုးကို ဖတ်ပြီး vA မှတ်ပုံတင်မှုတွင် ထားပေးပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvA = vB.field</item>
		<item>vA မှတ်ပုံတင်ခြင်းမှ တန်ဖိုးကို instance အကွက်သို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvB.field = vA</item>
		<item>မှတ်ပုံတင်အတွဲ (vA၊ vA+1) မှ နှစ်ဆ/ရှည်တန်ဖိုးကို သာဓကအကွက်တစ်ခုထဲသို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvB.field = (vA၊ vA+1)</item>
		<item>vA မှတ်ပုံတင်ခြင်းမှ အရာဝတ္ထုတစ်ခုအား ရည်ညွှန်းချက်တစ်ခုကို instance အကွက်သို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvB.field = vA</item>
		<item>vA မှတ်ပုံတင်ခြင်းမှ boolean တန်ဖိုးကို instance အကွက်ထဲသို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းကို ရည်ညွှန်းချက်မှာ vB မှတ်ပုံတင်ခြင်းတွင် ဖြစ်သည်။\nvB.field = vA</item>
		<item>register vB မှရည်ညွှန်းထားသော instance တွင် သတ်မှတ်ထားသော Boolean အကွက်၏ byte (ကိန်းပြည့်) တန်ဖိုးကို သတ်မှတ်ပေးသည်၊ ဆိုလိုသည်မှာ register vA ၏တန်ဖိုး၊\nvB.field = vA</item>
		<item>register vB မှရည်ညွှန်းထားသော instance တွင် သတ်မှတ်ထားသော Boolean အကွက်၏ char (ဇာတ်ကောင်) တန်ဖိုးကို သတ်မှတ်ပေးသည်၊ ဆိုလိုသည်မှာ register vA ၏တန်ဖိုးနှင့်ညီမျှသည်-\nvB.field = vA</item>
		<item>register vB မှရည်ညွှန်းထားသော instance တွင် သတ်မှတ်ထားသော Boolean အကွက်၏တိုတောင်းသော (ကိန်းပြည့်) တန်ဖိုးကို သတ်မှတ်ပေးသည်၊ ဆိုလိုသည်မှာ register vA ၏တန်ဖိုး၊\nvB.field = vA</item>
		<item>အငြိမ်အကွက်မှ တန်ဖိုးတစ်ခုကို ဖတ်ပြီး vAA မှတ်ပုံတင်မှုတွင် ထည့်ပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>အငြိမ်အကွက်မှ နှစ်ဆ/ရှည်တန်ဖိုးကို ဖတ်ပြီး vAA၊ vAA+1 မှတ်ပုံတင်တစ်စုံတွင် ထားလိုက်ပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>အငြိမ်အကွက်မှ အရာဝတ္ထုကိုးကားချက်ကို ဖတ်ပြီး vAA မှတ်ပုံတင်မှုတွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>static field မှ boolean တန်ဖိုးကို ဖတ်ပြီး vAA register တွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>static field တစ်ခုမှ byte (integer) တန်ဖိုးကို ဖတ်ပြီး vAA မှတ်ပုံတင်မှုတွင် ထားရှိပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>static field မှ char value ကိုဖတ်ပြီး vAA register တွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>static field မှ short (integer) value ကိုဖတ်ပြီး vAA register တွင် နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ တန်ဖိုးကို အကွက် (static field) ထဲသို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA၊ vAA+1 မှတ်ပုံတင်တစ်စုံမှ နှစ်ဆ/ရှည်တန်ဖိုးကို အကွက် (static field) သို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ အရာဝတ္ထုတစ်ခုအား ရည်ညွှန်းချက်ကို အကွက် (static field) ထဲသို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ boolean တန်ဖိုးကို အကွက် (static field) ထဲသို့ နေရာချပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ byte (ကိန်းပြည့်) တန်ဖိုးကို အကွက် (static field) ထဲသို့ ထည့်ပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ char တန်ဖိုးကို static field တစ်ခုသို့ ထားရှိပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းမှ အတို (ကိန်းပြည့်) တန်ဖိုးကို static field တစ်ခုသို့ ထားရှိပါ။ ဤအကွက်ပါရှိသော အတန်းအတွက် ရည်ညွှန်းချက်ပါရှိသော မှတ်ပုံတင်ကို အသုံးမပြုပါ။</item>
		<item>ကန့်သတ်ချက်များပါရှိသော ပကတိနည်းလမ်းကို ခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်)။ ကန့်သတ်ချက်များကို curly braces တွင်ဖော်ပြထားသည်။ ပထမဘောင် (register v2) တွင် ဟုခေါ်သော method ပါ၀င်သော အတန်းကို ရည်ညွှန်းချက်ပါရှိသည်၊ ဒုတိယဘောင် (register v3 ၏ အကြောင်းအရာများ) ကို ခေါ်ဆိုထားသော method သို့ ပေးပို့ပါသည်။</item>
		<item>ပင်မအတန်းအစားမှ တိုက်ရိုက်ဘောင်များပါသည့် ပကတိနည်းလမ်းတစ်ခုအား ခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်)။</item>
		<item>virtual method ၏ခွင့်ပြုချက်မရှိဘဲ parameter များပါသည့်နည်းလမ်းကိုခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်) ။</item>
		<item>ကန့်သတ်ချက်များနှင့် တည်ငြိမ်သောနည်းလမ်းကို ခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်)။ ကန့်သတ်ချက်များကို curly braces တွင်ဖော်ပြထားသည်။ ကန့်သတ်ချက် (registration v3 ၏ အကြောင်းအရာများ) ကို ခေါ်သည့် နည်းလမ်းသို့ ပေးပို့သည်။ ဟုခေါ်သောနည်းလမ်းပါရှိသော အတန်းကို ကောက်ကောက်ကောက်ကောက်များနောက်တွင် ညွှန်ပြသည်။</item>
		<item>ကန့်သတ်ချက်များပါရှိသော အင်တာဖေ့စ်နည်းလမ်းကို ခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်)။</item>
		<item>ကန့်သတ်ချက်များပါသည့် အတုအယောင်နည်းလမ်းကို ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ကန့်သတ်ချက်များကို နံပါတ်များဖြင့် စာရင်းသွင်းရာတွင် အစဉ်လိုက်ထည့်သွင်းရပါမည်။</item>
		<item>ပင်မအတန်းအစားများမှ ဘောင်များ တိုက်ရိုက်ပါရှိသော အတုအယောင်နည်းလမ်းကို ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ကန့်သတ်ချက်များသည် နံပါတ်များပါသော မှတ်ပုံတင်များထဲတွင် ပါဝင်ရပါမည်။</item>
		<item>virtual method ခွင့်ပြုချက်မရှိဘဲ ဘောင်များပါသည့် နည်းလမ်းတစ်ခုအား ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ဘောင်များကို စဉ်ဆက်မပြတ် နံပါတ်တပ်ထားသော မှတ်ပုံတင်များတွင် ထည့်သွင်းရပါမည်။</item>
		<item>ဘောင်များပါသည့် ငြိမ်နည်းလမ်းကို ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ကန့်သတ်နံပါတ်များကို နံပါတ်များပါသော မှတ်ပုံတင်များထဲတွင် ထည့်သွင်းရပါမည်။</item>
		<item>ဘောင်များပါရှိသော အင်တာဖေ့စ်နည်းလမ်းတစ်ခုအား ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ကန့်သတ်ချက်များကို စဉ်ဆက်မပြတ် နံပါတ်တပ်ထားသော မှတ်ပုံတင်များတွင် ထည့်သွင်းရပါမည်။</item>
		<item>အမျိုးအစား ကိန်းပြည့်တန်ဖိုးများအတွက် vA = -vB ကို တွက်ချက်သည်။</item>
		<item>ကိန်းပြည့်တန်ဖိုးများအတွက် vA = ~vB တွက်ချက်သည်။\nvA = ~vB</item>
		<item>အမျိုးအစားအရှည် (ကိန်းပြည့်) တန်ဖိုးများအတွက် (vA၊ vA+1) = -(vB၊ vB+1) ကို တွက်ချက်သည်။</item>
		<item>အမျိုးအစားရှည် (ကိန်းပြည့်) တန်ဖိုးများအတွက် (vA၊ vA+1) = ~(vB၊ vB+1) ကို တွက်ချက်သည်။</item>
		<item>float တန်ဖိုးများအတွက် vA = -vB တွက်ချက်သည်။</item>
		<item>နှစ်ထပ် (floating point) တန်ဖိုးများအတွက် (vA၊ vA+1) = -(vB၊ vB+1) ကို တွက်ချက်သည်။</item>
		<item>ကိန်းပြည့်ကို vB မှ အရှည်သို့ ပြောင်းပြီး မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (ရှည်) vB</item>
		<item>vB မှ ကိန်းပြည့်တစ်ခုကို float အဖြစ်ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (float) vB</item>
		<item>ကိန်းပြည့်ကို vB မှ နှစ်ဆ (floating point) သို့ ပြောင်းပြီး မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (နှစ်ဆ) vB</item>
		<item>ရှည်လျားသော (ကိန်းပြည့်) တန်ဖိုးကို vB၊ vB+1 မှ ကိန်းပြည့် (ကိန်းပြည့်) သို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (int) (vB၊ vB+1)</item>
		<item>ရှည်လျားသော (ကိန်းပြည့်) တန်ဖိုးကို vB၊ vB+1 မှ float (floating point) သို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (float) (vB၊ vB+1)</item>
		<item>ရှည်လျားသော (ကိန်းပြည့်) တန်ဖိုးကို vB၊ vB+1 မှ နှစ်ဆ (floating point) သို့ ပြောင်းပြီး ၎င်းကို မှတ်ပုံတင်တွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (နှစ်ဆ) (vB၊ vB+1)</item>
		<item>vB မှ float (floating point) တန်ဖိုးကို ကိန်းပြည့် (integer) တန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းထားသည်။\nvA = (int)vB</item>
		<item>float (floating point) တန်ဖိုးကို vB မှ long (integer) တန်ဖိုးသို့ ပြောင်းပြီး ၎င်းကို register pair vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (ရှည်) vB</item>
		<item>float (floating point) တန်ဖိုးကို vB မှ နှစ်ဆ (floating point) တန်ဖိုးသို့ ပြောင်းပြီး ၎င်းကို register pair vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (နှစ်ဆ) vB</item>
		<item>နှစ်ဆ (floating point) တန်ဖိုးကို vB၊ vB+1 မှ ကိန်းပြည့် (integer) တန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (int) (vB၊ vB+1)</item>
		<item>နှစ်ဆ (floating point) တန်ဖိုးကို vB၊ vB+1 မှ ရှည်လျားသော (ကိန်းပြည့်) တန်ဖိုးသို့ ပြောင်းပြီး ၎င်းကို မှတ်ပုံတင်တွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။\n(vA၊ vA+1) = (ရှည်) (vB၊ vB+1)</item>
		<item>နှစ်ဆ (floating point) တန်ဖိုးကို vB၊ vB+1 မှ float (floating point) တန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (float) (vB၊ vB+1)</item>
		<item>vB မှ ကိန်းပြည့်တန်ဖိုးကို byte တန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (ဘိုက်) vB</item>
		<item>vB မှ ကိန်းပြည့်တန်ဖိုးကို char တန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (char)vB</item>
		<item>vB မှ ကိန်းပြည့်တန်ဖိုးကို တိုတောင်းသောတန်ဖိုးသို့ ပြောင်းပြီး vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။\nvA = (အတို) vB</item>
		<item>vBB + vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB + vCC</item>
		<item>vBB - vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB - vCC</item>
		<item>vBB * vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB * vCC</item>
		<item>vBB/vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB/vCC</item>
		<item>vBB % vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB % vCC</item>
		<item>vBB &amp; vCC (logical AND) တွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB &amp; vCC</item>
		<item>vBB | တွက်ချက်သည်။ vCC (logical OR) နှင့် ရလဒ်များကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA=vBB| vCC</item>
		<item>vBB ^ vCC (သီးသန့် OR) ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA=vBB^vCC</item>
		<item>vCC မှသတ်မှတ်ထားသောဘစ်အရေအတွက်ဖြင့်ထားခဲ့သော vBB ကိုပြောင်းပြီးရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင်သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB</item>
		<item>vBB မှ vCC မှသတ်မှတ်ထားသော bit အရေအတွက်အလိုက် ညာဘက်သို့ vBB ကိုပြောင်းကာ ရလဒ်ကို vAA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB >> vCC</item>
		<item>vCC မှသတ်မှတ်ထားသော bit အရေအတွက်ဖြင့် ဆိုင်းဘုတ်ကို ညာဘက်သို့မသိမ်းဘဲ vBB ကိုပြောင်းကာ ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB >>> vCC</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) + (vCC၊ vCC+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) + (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) - (vCC၊ vCC+1) တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းအတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) - (vCC၊ vCC+1)</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) * (vCC၊ vCC+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) * (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) / (vCC၊ vCC+1) တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းအတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) / (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) % (vCC၊ vCC+1) ကို တွက်ချက်ပြီး ရလဒ်ကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) % (vCC၊ vCC+1)</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) &amp; (vCC၊ vCC+1) (ယုတ္တိနည်း AND) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) &amp; (vCC၊ vCC+1)</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) | (vCC၊ vCC+1) (logical OR) ရလဒ်ကို vAA၊ vAA+1 မှတ်ပုံတင်တစ်စုံတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) | (vCC၊ vCC+1)</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) ^ (vCC၊ vCC+1) (သီးသန့် AND) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) ^ (vCC၊ vCC+1)</item>
		<item>vBB၊ vBB+1 ကို vCC မှသတ်မှတ်ထားသော ဘစ်အရေအတွက်ဖြင့် ဘယ်ဘက်သို့ ရွှေ့ကာ ရလဒ်ကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1)</item>
		<item>vBB၊ vBB+1 ကို vCC မှသတ်မှတ်ထားသော ဘစ်အရေအတွက်အလိုက် ညာဘက်သို့ပြောင်းကာ ရလဒ်ကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) >> vCC</item>
		<item>vBB၊ vBB+1 သည် vCC မှ သတ်မှတ်ထားသော ဘစ်အရေအတွက်ဖြင့် ဆိုင်းဘုတ်ကို မထိန်းသိမ်းဘဲ ညာဘက်သို့ ရွှေ့ကာ ရလဒ်ကို မှတ်ပုံတင်တစ်စုံ vAA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) >>> vCC</item>
		<item>vBB + vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvAA = vBB + vCC</item>
		<item>vBB - vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvAA = vBB - vCC</item>
		<item>vBB * vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvAA = vBB * vCC</item>
		<item>vBB/vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvAA = vBB/vCC</item>
		<item>vBB % vCC ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvAA = vBB % vCC</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) + (vCC၊ vCC+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) + (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) - (vCC၊ vCC+1) တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းအတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) - (vCC၊ vCC+1)</item>
		<item>ကွန်ပျူတာများ (vBB၊ vBB+1) * (vCC၊ vCC+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) * (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) / (vCC၊ vCC+1) တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းအတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) / (vCC၊ vCC+1)</item>
		<item>(vBB၊ vBB+1) % (vCC၊ vCC+1) ကို တွက်ချက်ပြီး ရလဒ်ကို မှတ်ပုံတင်အတွဲ vAA၊ vAA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vAA၊ vAA+1) = (vBB၊ vBB+1) % (vCC၊ vCC+1)</item>
		<item>vA + vB ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vA + vB</item>
		<item>vA - vB ကို တွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vA - vB</item>
		<item>vA * vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vA * vB</item>
		<item>vA/vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA/vB</item>
		<item>vA % vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vA % vB</item>
		<item>vA &amp; vB (logical AND) ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA&amp;vB</item>
		<item>vA | တွက်ချက်သည်။ vB (logical OR) နှင့်ရလဒ်များကို vA မှတ်ပုံတင်တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA| vB</item>
		<item>vA^vB (သီးသန့် OR) ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA^vB</item>
		<item>vB မှသတ်မှတ်ထားသောဘစ်အရေအတွက်ဖြင့် vA ကိုဘယ်ဘက်သို့ရွှေ့ပြီးရလဒ်ကို vA မှတ်ပုံတင်ခြင်းတွင်သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA</item>
		<item>vB မှသတ်မှတ်ထားသော ဘစ်အရေအတွက်အလိုက် vA ကို ညာဘက်သို့ပြောင်းကာ ရလဒ်ကို vA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vA>>vB</item>
		<item>vB မှသတ်မှတ်ထားသော bit အရေအတွက်ဖြင့် ၎င်း၏နိမိတ်လက္ခဏာကို ညာဘက်သို့မထိန်းသိမ်းဘဲ vA ကိုပြောင်းကာ ရလဒ်ကို vA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းပါ။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vA >>> vB</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) + (vB၊ vB+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) + (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) - (vB၊ vB+1) ကို တွက်ချက်ပြီး ရလဒ် vA၊ vA+1 မှတ်ပုံတင်တစ်စုံတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) - (vB၊ vB+1)</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) * (vB၊ vB+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) * (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) / (vB၊ vB+1) ကို တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) / (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) % (vB၊ vB+1) တွက်ချက်ပြီး ရလဒ်ကို မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) % (vB၊ vB+1)</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) &amp; (vB၊ vB+1) (ယုတ္တိနည်း AND) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) &amp; (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) | တွက်ချက်သည်။ (vB၊ vB+1) (ယုတ္တိနည်း OR) ရလဒ်ကို vA၊ vA+1 မှတ်ပုံတင်တစ်စုံတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) | (vB၊ vB+1)</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) &amp; (vB၊ vB+1) (သီးသန့် OR) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) ^ (vB၊ vB+1)</item>
		<item>vA၊ vA+1 ကို vB မှသတ်မှတ်ထားသော ဘစ်အရေအတွက်အလိုက် ဘယ်ဘက်သို့ ရွှေ့ကာ ရလဒ်ကို မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1)</item>
		<item>vA၊ vA+1 ကို vB မှသတ်မှတ်ထားသော ဘစ်အရေအတွက်အလိုက် ညာဘက်သို့ပြောင်းကာ ရလဒ်ကို မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) >> vB</item>
		<item>vB မှသတ်မှတ်ထားသော ဂဏန်းနံပါတ်များဖြင့် ဆိုင်းဘုတ်ကို မထိန်းသိမ်းဘဲ vA၊ vA+1 ကို ညာဘက်သို့ ရွှေ့ကာ ရလဒ်ကို မှတ်ပုံတင်တစ်စုံ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် အရှည် (ကိန်းပြည့်) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) >>> vB</item>
		<item>vA + vB ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvA = vA + vB</item>
		<item>vA - vB ကို တွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvA = vA - vB</item>
		<item>vA * vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvA = vA * vB</item>
		<item>vA/vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvA=vA/vB</item>
		<item>vA % vB ကို တွက်ချက်ပြီး ရလဒ်ကို vA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံး မျှောနေပါသည်။\nvA = vA % vB</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) + (vB၊ vB+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) + (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) - (vB၊ vB+1) ကို တွက်ချက်ပြီး ရလဒ် vA၊ vA+1 မှတ်ပုံတင်တစ်စုံတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) - (vB၊ vB+1)</item>
		<item>တွက်ချက်မှုများ (vA၊ vA+1) * (vB၊ vB+1) နှင့် ရလဒ်များကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) * (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) / (vB၊ vB+1) ကို တွက်ချက်ပြီး ရလဒ်ကို စာရင်းသွင်းတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) / (vB၊ vB+1)</item>
		<item>(vA၊ vA+1) % (vB၊ vB+1) တွက်ချက်ပြီး ရလဒ်ကို မှတ်ပုံတင်အတွဲ vA၊ vA+1 တွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် နှစ်ဆ (floating point) ဖြစ်သည်။\n(vA၊ vA+1) = (vA၊ vA+1) % (vB၊ vB+1)</item>
		<item>vB + 0xFFFF ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vB + 0xFFFF</item>
		<item>0xFFFF - vB ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = 0xFFFF - vB</item>
		<item>vB * 0xFFFF ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vB * 0xFFFF</item>
		<item>vB / 0xFFFF တွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vB / 0xFFFF</item>
		<item>vB % 0xFFFF ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vB % 0xFFFF</item>
		<item>vB &amp; 0xFFFF (logical AND) ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA = vB &amp; 0xFFFF</item>
		<item>vB | တွက်ချက်သည်။ 0xFFFF (logical OR) နှင့်ရလဒ်များကို vA မှတ်ပုံတင်တွင် သိမ်းဆည်းပါ။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vB| 0xFFFF</item>
		<item>vB^0xFFFF (သီးသန့် OR) ကိုတွက်ချက်ပြီး vA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvA=vB^0xFFFF</item>
		<item>vBB + 0xFF ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB + 0xFF</item>
		<item>0xFF - vBB ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းပါ။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = 0xFF - vBB</item>
		<item>vBB * 0xFF ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB * 0xFF</item>
		<item>vBB / 0xFF ကို တွက်ချက်ပြီး ရလဒ်ကို vAA မှတ်ပုံတင်မှုတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB / 0xFF</item>
		<item>vBB % 0xFF ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB % 0xFF</item>
		<item>vBB &amp; 0xFF (logical AND) ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB &amp; 0xFF</item>
		<item>vBB | တွက်ချက်သည်။ 0xFF (logical OR) နှင့်ရလဒ်များကို vAA မှတ်ပုံတင်ခြင်းတွင်သိမ်းဆည်းပါ။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA=vBB| 0xFF</item>
		<item>vBB^0xFF (သီးသန့် OR) ကိုတွက်ချက်ပြီး vAA မှတ်ပုံတင်မှုတွင် ရလဒ်ကို သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB^0xFF</item>
		<item>0xFF မှသတ်မှတ်ထားသော bit အရေအတွက်ဖြင့်ထားခဲ့သော vBB ကိုပြောင်းပြီးရလဒ်ကို vAA မှတ်ပုံတင်ခြင်းတွင်သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB</item>
		<item>0xFF မှသတ်မှတ်ထားသော bit အရေအတွက်အလိုက် vBB ကို ညာဘက်သို့ပြောင်းကာ ရလဒ်ကို vAA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB >> 0xFF</item>
		<item>0xFF မှသတ်မှတ်ထားသော bit အရေအတွက်အလိုက် vBB ကို ညာဘက်သို့ သိသိသာသာပြောင်းကာ ရလဒ်ကို vAA မှတ်ပုံတင်ခြင်းတွင် သိမ်းဆည်းထားသည်။ တန်ဖိုးများအားလုံးသည် ကိန်းပြည့်ဖြစ်သည်။\nvAA = vBB >>> 0xFF</item>
		<item>ဘောင်များပါရှိသော ပေါလီမိုရစ် လက်မှတ်နည်းလမ်းကို ခေါ်ဆိုခြင်း (လုပ်ဆောင်သည်)။ ဗားရှင်း 038 မှစ၍ Dex ဖိုင်များတွင် ပါရှိသည်။</item>
		<item>ဘောင်များပါရှိသော ပေါလူးပုံစံ လက်မှတ်နည်းလမ်းကို ခေါ်ဆိုမှုများ (လုပ်ဆောင်သည်)၊ သို့သော် ကန့်သတ်ချက်များကို စဉ်ဆက်မပြတ် နံပါတ်တပ်ထားသော မှတ်ပုံတင်များတွင် ထည့်သွင်းရပါမည်။ ဗားရှင်း 038 မှစ၍ Dex ဖိုင်များတွင် ပါရှိသည်။</item>
		<item>ကန့်သတ်ချက်များပါရှိသော ဆိုက်ကို (စတင်သည်) ခေါ်ဆိုခွင့်ပြုသည်။ ဗားရှင်း 038 မှစ၍ Dex ဖိုင်များတွင် ပါရှိသည်။</item>
		<item>ကန့်သတ်ချက်များပါသော ဆိုက်တစ်ခုကို (စတင်) ခေါ်ဆိုခြင်းအား ခွင့်ပြုသည်၊ သို့သော် ကန့်သတ်ချက်များကို နံပါတ်များဖြင့် စာရင်းသွင်းမှုများတွင် ပါ၀င်ရပါမည်။ ဗားရှင်း 038 မှစ၍ Dex ဖိုင်များတွင် ပါရှိသည်။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် နည်းလမ်းလက်ကိုင်တစ်ခုအား ရည်ညွှန်းချက်တစ်ခုထားရှိပါ။ ဗားရှင်း 039 ကတည်းက Dex ဖိုင်များထဲတွင် ရှိနေသည်။</item>
		<item>vAA မှတ်ပုံတင်ခြင်းတွင် နည်းလမ်းရှေ့ပြေးပုံစံကို ကိုးကားထားသည်။ ဗားရှင်း 039 ကတည်းက Dex ဖိုင်များထဲတွင် ရှိနေသည်။</item>
	</string-array>
    <string-array name="sort">
        <item>အမည်</item>
        <item>အမည်(ပြောင်းပြန်)</item>
        <item>အမျိုးအစား</item>
        <item>အမျိုးအစား(ပြောင်းပြန်)</item>
        <item>အရွယ်အစား</item>
        <item>အရွယ်အစား(ပြောင်းပြန်)</item>
        <item>အချိန်</item>
        <item>အချိန်(ပြောင်းပြန်)</item>
    </string-array> 
	<string-array name="auto_save_variants">
		<item>Off</item>
		<item>15 စက္ကန့်</item> 
		<item>30 စက္ကန့်</item>
		<item>1 မိနစ်</item> 
		<item>5 မိနစ်</item>
	</string-array>
	<string-array name="editor_themes">
		<item>မူလ</item>
		<item>အသစ်</item> 
	</string-array>
	<string-array name="format">
        <item>@string/jks</item>
        <item>@string/pkcs12</item>
        <item>@string/bks</item>
        <item>@string/pk8</item>
    </string-array>
</resources>