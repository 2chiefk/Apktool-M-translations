<?xml version="1.0" encoding="utf-8"?>
<resources>
	<string-array name="smali_help_names">
		<item>السجلات</item>
		<item>القيم الحرفية</item>
		<item>أنواع البيانات البدائية</item>
	</string-array>
	<string-array name="smali_help_values" formatted="false">
		<item>vA عبارة عن سجل 4 بت مع نطاق القيمة v0 - v15\nvAA عبارة عن سجل 8 بت بنطاق قيمة من v0 إلى v255\nvAAAA عبارة عن سجل 16 بت بنطاق قيمة من v0 إلى v65535</item>
		<item>يتم استخدام 0xF، 0xFF، وما إلى ذلك. لتمثيل القيم الحرفية. مثل السجلات، يتم استخدام الرقم F لتمثيل مجموعة من القيم، على سبيل المثال:\nيتم تمثيل نطاق قيم 0xF بواسطة [-0x8، 0x7]\nيتم تمثيل نطاق قيم 0xFF بواسطة [-0x80، 0x7F]</item>
		<item>V - باطل، Z - منطقي، B - بايت\nC - شار، S - قصير، أنا - كثافة العمليات\nJ - طويل، F - تعويم، D - مزدوج\nباطل: يمكن استخدامه فقط لأنواع الإرجاع\nمنطقية: يخزن القيمة صحيحة أو خاطئة\nالبايت: يخزن عددًا صحيحًا من -128 إلى 127 ويشغل بايتًا واحدًا\nباختصار: يخزن عددًا صحيحًا من -32768 إلى 32767 ويستغرق 2 بايت\nint: يخزن عددًا صحيحًا من -2147483648 إلى 2147483647 ويشغل 4 بايت\nطويل: يخزن عددًا صحيحًا من -9223372036854775808 إلى 9223372036854775807 ويشغل 8 بايت\nمزدوج: يخزن رقم الفاصلة العائمة من ±4.9*10³²⁴ إلى ±1.7976931348623157*10³⁰⁸ ويشغل 8 بايت. يتم استخدام النقطة كفاصل عشري في القيم الحرفية الكسرية.\nتعويم: يخزن رقم الفاصلة العائمة من -3.4*10³⁸ إلى 3.4*10³⁸ ويشغل 4 بايت\nchar: يخزن حرفًا واحدًا بتشفير UTF-16 ويشغل 2 بايت، وبالتالي فإن نطاق القيم المخزنة يتراوح من 0 إلى 65535.</item>
		<item>لا رد فعل.</item>
		<item>ينقل قيمة التسجيل vB إلى تسجيل vA.</item>
		<item>ينقل قيمة سجل vBBBB إلى سجل vAA.</item>
		<item>ينقل قيمة سجل vBBBB إلى سجل vAAAA.</item>
		<item>ينقل القيمة الطويلة/المزدوجة لزوج التسجيل (vB, vB+1) لتسجيل الزوج vA, vA+1.</item>
		<item>ينقل القيمة الطويلة/المزدوجة لزوج التسجيل (vBBBB، vBBBB+1) إلى زوج التسجيل vAA، vAA+1.</item>
		<item>ينقل القيمة الطويلة/المزدوجة لزوج التسجيل (vBBBB، vBBBB+1) إلى زوج التسجيل vAAAA، vAAAA+1.</item>
		<item>ينقل مرجع الكائن من سجل vB إلى سجل vA.</item>
		<item>ينقل مرجع الكائن من سجل vBBBB إلى سجل vAA.</item>
		<item>ينقل مرجع الكائن من سجل vBBBB إلى سجل vAAAA.</item>
		<item>ينقل القيمة المرجعة للطريقة التي تم استدعاؤها مسبقًا إلى سجل vAA.</item>
		<item>ينقل القيمة الطويلة/المزدوجة التي تم إرجاعها بواسطة الطريقة التي تم استدعاؤها مسبقًا إلى زوج التسجيل vAA، vAA+1.</item>
		<item>ينقل مرجع الكائن الذي تم إرجاعه بواسطة الطريقة التي تم استدعاؤها مسبقًا إلى سجل vAA.</item>
		<item>ينقل المرجع إلى الكائن المستبعد الصادر أثناء استدعاء الأسلوب (أثناء التنفيذ) إلى سجل vAA.</item>
		<item>العودة مع عدم وجود قيمة العودة.</item>
		<item>العودة عن طريق إرجاع القيمة من سجل vAA.</item>
		<item>العودة عن طريق إرجاع قيمة مزدوجة/طويلة إلى زوج من السجلات vAA، vAA+1.</item>
		<item>العودة عن طريق إرجاع قيمة مرجع الكائن من سجل vAA.</item>
		<item>يضع ثابت 4 بت في سجل vA.</item>
		<item>يضع ثابت 16 بت في سجل vAA.</item>
		<item>يضع عددًا صحيحًا ثابتًا في سجل vAA.</item>
		<item>يضع ثابت 16 بت في البتات العليا لسجل vAA. يستخدم لتهيئة القيم العائمة (النقطة العائمة).</item>
		<item>يضع ثابت عدد صحيح 16 بت في زوج التسجيل vAA، vAA+1، ويحول ثابت العدد الصحيح إلى ثابت طويل.</item>
		<item>يضع ثابت عدد صحيح 32 بت في زوج التسجيل vAA، vAA+1، ويحول ثابت العدد الصحيح إلى ثابت طويل.</item>
		<item>يضع ثابت 64 بت في زوج التسجيل vAA، vAA+1.</item>
		<item>يضع ثابت 16 بت في أعلى 16 بت من زوج التسجيل vAA، vAA+1. يستخدم لتهيئة القيم المزدوجة (الفاصلة العائمة).</item>
		<item>يضع مرجعًا للسلسلة المحددة في سجل vAA.</item>
		<item>يضع مرجعًا للسلسلة المحددة في سجل vAA.</item>
		<item>يضع مرجعًا لثابت السلسلة (السلسلة) المحدد بواسطة string_id في سجل vAA.</item>
		<item>يحصل على شاشة الكائن المشار إليها بواسطة سجل vAA.</item>
		<item>يقوم بتحرير شاشة الكائن المشار إليها بواسطة سجل vAA.</item>
		<item>للتحقق مما إذا كان يمكن إرسال مرجع الكائن الموجود في سجل vAA إلى الفئة المحددة بواسطة type_id. يُطلق استثناء ClassCastException إذا لم يتمكن من ذلك، وإلا فإنه يستمر في التنفيذ.</item>
		<item>التحقق مما إذا كانت محتويات سجل vB هي مثيل للفئة المحددة بواسطة type_id. يضبط تسجيل vA على قيمة غير صفرية إذا كان موجودًا، و0 إذا لم يكن كذلك.\nvA = مثيل vB من النوع؟ 10</item>
		<item>يحدد عدد عناصر المصفوفة من سجل vB ويضع القيمة في سجل vA.\nvA = vB.length</item>
		<item>يقوم بإنشاء مثيل لنوع الكائن ويضع مرجعًا للمثيل الذي تم إنشاؤه في سجل vAA.</item>
		<item>ينشئ مصفوفة جديدة من متغيرات type_id بحجم عناصر التسجيل vB ويضع مرجعًا للمصفوفة في السجل vA.</item>
		<item>ينشئ مصفوفة بيانات جديدة من النوع type_id ويملأها بالمعلمات (أي لا توجد مصفوفات طويلة/مزدوجة، ولكن يُسمح بأنواع المراجع). يمكن الحصول على مرجع إلى المصفوفة التي تم إنشاؤها حديثًا باستخدام عبارة move-result-object التي تلي هذه العبارة مباشرةً (في حالة استخدام واحدة).</item>
		<item>ينشئ مصفوفة بيانات جديدة من النوع type_id ويملأها بنطاق من المعلمات (أي لا توجد مصفوفات طويلة/مزدوجة، ولكن الأنواع المرجعية مقبولة). يمكن الحصول على مرجع إلى المصفوفة التي تم إنشاؤها حديثًا باستخدام عبارة move-result-object التي تلي هذه العبارة مباشرةً (في حالة استخدام واحدة).</item>
		<item>يملأ الصفيف المشار إليه في سجل vAA بالبيانات الثابتة. موقع البيانات هو مجموع موضع التعليمات الحالية والإزاحة.</item>
		<item>يلقي كائن استثناء. مرجع إلى كائن الاستثناء في سجل vAA.</item>
		<item>انتقل دون قيد أو شرط إلى إزاحة قصيرة (عدد صحيح) 8 بت.</item>
		<item>الانتقال غير المشروط إلى إزاحة 16 بت.</item>
		<item>القفز غير المشروط إلى إزاحة 32 بت.</item>
		<item>ينفذ عامل التبديل عندما تكون ثوابت التحكم قريبة من بعضها البعض (على التوالي). تستخدم التعليمات جدول الفهرس. يتم تحديد إزاحة التعليمات لحالة معينة بواسطة فهرس vAA. إذا تجاوز فهرس vAA الجدول، فسيستمر التنفيذ مع العبارة التالية (افتراضي).</item>
		<item>ينفذ عامل التبديل في حالة وجود جدول متفرق. تستخدم التعليمات جدولاً يحدد الإزاحات لكل ثابت. إذا لم يتم العثور على أي تطابقات في الجدول، فسيتم تنفيذ العبارة التالية (حالة الأحرف الافتراضية).</item>
		<item>يقارن قيم التعويم (الفاصلة العائمة) في vBB وvCC ويضع القيمة الصحيحة في سجل vAA:\nvAA = vBB &lt; vCC؟ نعم: 1، لا: -1، يساوي: 0</item>
		<item>يقارن قيم التعويم (الفاصلة العائمة) في vBB وvCC ويضع القيمة الصحيحة في سجل vAA:\nvAA = vBB &lt; vCC؟ نعم: 1، لا: -1، يساوي: 0</item>
		<item>يقارن القيم المزدوجة (الفاصلة العائمة) في vBB وvCC ويضع القيمة الصحيحة في سجل vAA:\nvAA = (vBB, vBB+1) &lt; (vCC, vCC+1) ؟ ذ\nنعم: 1، لا: -1، يساوي: 0</item>
		<item>يقارن القيم المزدوجة (الفاصلة العائمة) في vBB وvCC ويضع القيمة الصحيحة في سجل vAA:\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ؟ نعم: 1، لا: -1، يساوي: 0</item>
		<item>يقارن القيم الطويلة (العددية) في vBB وvCC ويضع قيمة العدد الصحيح (العدد الصحيح) في سجل vAA:\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ؟ نعم: 1، لا: -1، يساوي: 0</item>
		<item>ينتقل إلى التسمية المحددة إذا كانت vA == vB. يحتوي vA وvB على قيم عددية.\n(eq قصير لـ يساوي)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vA != vB. يحتوي vA وvB على قيم عددية.\n(ne اختصار لـ Not Equals)</item>
		<item>ينتقل إلى التسمية المحددة إذا كانت vA &lt; vB. يحتوي vA وvB على قيم عددية.\n(lt قصير لأقل من)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vA</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vA > vB. يحتوي vA وvB على قيم عددية.\n(gt اختصار لـ أكبر من/أكثر من)</item>
		<item>ينتقل إلى التسمية المحددة إذا كانت vA >= vB. يحتوي vA وvB على قيم عددية.\n(ge اختصار لأكبر من أو يساوي)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA == 0. ويحتوي vAA على قيمة عددية صحيحة.\n(eqz اختصار لـ يساوي صفر)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA != 0. يحتوي vAA على قيمة عددية صحيحة.\n(nez اختصار لـ \"لا يساوي الصفر\")</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA &lt; 0. يحتوي vAA على قيمة عددية صحيحة.\n(ltz اختصار لأقل من الصفر)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA > 0. يحتوي vAA على قيمة عددية صحيحة.\n(gtz اختصار لـ أكبر من الصفر)</item>
		<item>ينتقل إلى التسمية المحددة إذا كان vAA >= 0. يحتوي vAA على قيمة عددية صحيحة.\n(gez هو اختصار لـ أكبر من أو يساوي الصفر)</item>
		<item>الحصول على قيمة عددية في الفهرس الموجود في vCC من المصفوفة المشار إليها في vBB ووضعها في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يحصل، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، على قيمة مزدوجة/طويلة ويضعها في زوج التسجيل vAA، vAA+1.\n(vAA، vAA+1) = vBB[vCC]</item>
		<item>يتلقى، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، مرجعًا إلى الكائن ويضعه في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يحصل، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، على قيمة منطقية ويضعها في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يسترد، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، قيمة البايت (عدد صحيح) ويضعها في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يسترد، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، قيمة char ويضعها في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يسترد، في الفهرس الموجود في vCC، من المصفوفة المشار إليها في vBB، قيمة قصيرة (عدد صحيح) ويضعها في سجل vAA.\nvAA = vBB[vCC]</item>
		<item>يضع قيمة العدد الصحيح من vAA في المصفوفة المشار إليها في vBB مع العنصر الذي يحتوي على سجل vCC.\nvBB[vCC] = vAA</item>
		<item>يضع قيمة مزدوجة/طويلة من زوج التسجيل vAA، vAA+1 في المصفوفة المشار إليها في vBB، مع العنصر الذي يحتوي على سجل vCC.\nvBB[vCC] = (vAA، vAA+1)</item>
		<item>يضع مرجعًا لكائن من vAA في المصفوفة المشار إليها في vBB مع عنصر مسجل vCC.\nvBB[vCC] = vAA</item>
		<item>يضع القيمة المنطقية من vAA في المصفوفة المشار إليها بواسطة vBB مع العنصر الذي يحتوي على سجل vCC.\nvBB[vCC] = vAA</item>
		<item>يضع قيمة البايت (عدد صحيح) من vAA في المصفوفة المشار إليها في vBB مع العنصر الذي يحتوي على السجل vCC.\nvBB[vCC] = vAA</item>
		<item>يضع قيمة char (الحرف) من vAA في المصفوفة المشار إليها في vBB حسب العنصر مع تسجيل vCC.\nvBB[vCC] = vAA</item>
		<item>يضع القيمة القصيرة (العددية) من vAA في المصفوفة المشار إليها في vBB مع العنصر الذي يحتوي على سجل vCC.\nvBB[vCC] = vAA</item>
		<item>يقرأ القيمة من حقل المثيل ويضعها في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يقرأ قيمة مزدوجة/طويلة من حقل مثيل ويضعها في زوج من السجلات (vA، vA+1). المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\n(vA, vA+1) = vB.field</item>
		<item>يقرأ مرجع كائن من حقل مثيل ويضعه في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يقرأ قيمة منطقية من حقل المثيل ويضعها في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يقرأ قيمة بايت (عدد صحيح) من حقل مثيل ويضعها في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يقرأ قيمة char من حقل المثيل ويضعها في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يقرأ قيمة قصيرة (عدد صحيح) من حقل مثيل ويضعها في سجل vA. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvA = vB.field</item>
		<item>يضع القيمة من سجل vA في حقل المثيل. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvB.field = vA</item>
		<item>يضع قيمة مزدوجة/طويلة من زوج التسجيل (vA، vA+1) في حقل المثيل. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvB.field = (vA، vA+1)</item>
		<item>يضع مرجعًا لكائن من سجل vA في حقل المثيل. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvB.field = vA</item>
		<item>يضع القيمة المنطقية من سجل vA في حقل المثيل. المرجع إلى الفئة التي تحتوي على هذا الحقل موجود في سجل vB.\nvB.field = vA</item>
		<item>يضبط قيمة البايت (عدد صحيح) للحقل المنطقي المحدد في المثيل المشار إليه بواسطة التسجيل vB مساوية لقيمة السجل vA، أي:\nvB.field = vA</item>
		<item>يضبط قيمة char (الحرف) للحقل المنطقي المحدد في المثيل المشار إليه بواسطة التسجيل vB مساوية لقيمة السجل vA، أي:\nvB.field = vA</item>
		<item>يضبط القيمة القصيرة (عدد صحيح) للحقل المنطقي المحدد في المثيل المشار إليه بواسطة السجل vB مساوية لقيمة السجل vA، أي:\nvB.field = vA</item>
		<item>يقرأ قيمة من حقل ثابت ويضعها في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ قيمة مزدوجة/طويلة من حقل ثابت ويضعها في زوج من السجلات vAA، vAA+1. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ مرجع كائن من حقل ثابت ويضعه في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ قيمة منطقية من حقل ثابت ويضعها في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ قيمة بايت (عدد صحيح) من حقل ثابت ويضعها في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ قيمة char من حقل ثابت ويضعها في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يقرأ قيمة قصيرة (عدد صحيح) من حقل ثابت ويضعها في سجل vAA. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع القيمة من سجل vAA في حقل (حقل ثابت). لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع قيمة مزدوجة/طويلة من زوج من السجلات vAA، vAA+1 في حقل (حقل ثابت). لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع مرجعًا لكائن من سجل vAA في حقل (حقل ثابت). لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع القيمة المنطقية من سجل vAA في حقل (حقل ثابت). لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع قيمة بايت (عدد صحيح) من سجل vAA في حقل (حقل ثابت). لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع قيمة char من سجل vAA في حقل ثابت. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يضع القيمة القصيرة (العدد الصحيح) من سجل vAA في حقل ثابت. لا يتم استخدام السجل الذي يحتوي على مرجع الفئة التي تحتوي على هذا الحقل.</item>
		<item>يستدعي (يعمل) طريقة افتراضية ذات معلمات. تتم الإشارة إلى المعلمات بين الأقواس المتعرجة. تحتوي المعلمة الأولى (تسجيل v2) على مرجع للفئة التي تحتوي على الطريقة المطلوبة، ويتم تمرير المعلمة الثانية (محتويات السجل v3) إلى الطريقة المطلوبة.</item>
		<item>استدعاء (تشغيل) طريقة افتراضية بمعلمات مباشرة من الفئة الأصل.</item>
		<item>استدعاء (تشغيل) طريقة ذات معلمات دون أذونات الطريقة الافتراضية.</item>
		<item>يستدعي (يعمل) طريقة ثابتة مع المعلمات. تتم الإشارة إلى المعلمات بين الأقواس المتعرجة. يتم تمرير المعلمة (محتويات السجل v3) إلى الطريقة المطلوبة. تتم الإشارة إلى الفئة التي تحتوي على الطريقة المطلوبة بعد الأقواس المتعرجة.</item>
		<item>استدعاء (تشغيل) طريقة واجهة مع المعلمات.</item>
		<item>يستدعي (يعمل) طريقة افتراضية تحتوي على معلمات، ولكن يجب أن تكون المعلمات موجودة في سجلات ذات أرقام بالترتيب.</item>
		<item>يستدعي (يعمل) طريقة افتراضية تحتوي على معلمات مباشرة من الفئة الأصلية، ولكن يجب أن تكون المعلمات موجودة في سجلات ذات أرقام متسلسلة.</item>
		<item>يستدعي (يعمل) أسلوبًا يحتوي على معلمات بدون أذونات أسلوب افتراضي، ولكن يجب أن تكون المعلمات موجودة في سجلات مرقمة بشكل تسلسلي.</item>
		<item>يستدعي (يعمل) طريقة ثابتة تحتوي على معلمات، ولكن يجب أن تكون المعلمات موجودة في سجلات ذات أرقام متسلسلة.</item>
		<item>يستدعي (يعمل) طريقة واجهة تحتوي على معلمات، ولكن يجب أن تكون المعلمات موجودة في سجلات مرقمة بشكل تسلسلي.</item>
		<item>يحسب vA = -vB لقيم النوع الصحيح.</item>
		<item>حساب vA = ~vB للقيم الصحيحة.\nvA = ~vB</item>
		<item>يتم حساب (vA, vA+1) = -(vB, vB+1) للقيم من النوع الطويل (عدد صحيح).</item>
		<item>يتم حساب (vA, vA+1) = ~(vB, vB+1) للقيم من النوع الطويل (عدد صحيح).</item>
		<item>حساب vA = -vB للقيم العائمة.</item>
		<item>حساب (vA, vA+1) = -(vB, vB+1) للقيم المزدوجة (الفاصلة العائمة).</item>
		<item>تحويل عدد صحيح من vB إلى طويل وتخزينه في زوج التسجيل vA, vA+1.\n(vA, vA+1) = (طويل) vB</item>
		<item>تحويل عدد صحيح من vB إلى عدد عشري وتخزينه في سجل vA.\nvA = (تعويم) vB</item>
		<item>تحويل عدد صحيح من vB إلى مزدوج (نقطة عائمة) وتخزينه في زوج التسجيل vA، vA+1.\n(vA, vA+1) = (مزدوج) vB</item>
		<item>تحويل قيمة طويلة (عدد صحيح) من vB، vB+1 إلى عدد صحيح (عدد صحيح) وتخزينها في سجل vA.\nvA = (int) (vB، vB+1)</item>
		<item>تحويل قيمة طويلة (عدد صحيح) من vB، vB+1 إلى قيمة عائمة (نقطة عائمة) وتخزينها في سجل vA.\nvA = (تعويم) (vB، vB+1)</item>
		<item>تحويل قيمة طويلة (عدد صحيح) من vB، vB+1 إلى قيمة مزدوجة (نقطة عائمة) وتخزينها في زوج تسجيل vA، vA+1.\n(vA، vA+1) = (مزدوج) (vB، vB+1)</item>
		<item>تحويل قيمة تعويم (نقطة عائمة) من vB إلى قيمة عددية (عدد صحيح) وتخزينها في سجل vA.\nvA = (int)vB</item>
		<item>تحويل قيمة تعويم (نقطة عائمة) من vB إلى قيمة طويلة (عدد صحيح) وتخزينها في زوج التسجيل vA، vA+1.\n(vA, vA+1) = (طويل) vB</item>
		<item>تحويل قيمة تعويم (نقطة عائمة) من vB إلى قيمة مزدوجة (نقطة عائمة) وتخزينها في زوج التسجيل vA، vA+1.\n(vA, vA+1) = (مزدوج) vB</item>
		<item>تحويل قيمة مزدوجة (نقطة عائمة) من vB، vB+1 إلى قيمة عددية (عدد صحيح) وتخزينها في سجل vA.\nvA = (int) (vB، vB+1)</item>
		<item>تحويل قيمة مزدوجة (نقطة عائمة) من vB، vB+1 إلى قيمة طويلة (عدد صحيح) وتخزينها في زوج تسجيل vA، vA+1.\n(vA, vA+1) = (طويل) (vB, vB+1)</item>
		<item>تحويل قيمة مزدوجة (نقطة عائمة) من vB، vB+1 إلى قيمة عائمة (نقطة عائمة) وتخزينها في سجل vA.\nvA = (تعويم) (vB، vB+1)</item>
		<item>يحول قيمة عددية من vB إلى قيمة بايت ويخزنها في سجل vA.\nvA = (بايت) vB</item>
		<item>تحويل قيمة عددية من vB إلى قيمة char وتخزينها في سجل vA.\nvA = (شار)vB</item>
		<item>يحول قيمة عددية من vB إلى قيمة قصيرة ويخزنها في سجل vA.\nvA = (قصير) vB</item>
		<item>حساب vBB + vCC وتخزين النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB + vCC</item>
		<item>حساب vBB - vCC وتخزين النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB - vCC</item>
		<item>يحسب vBB * vCC ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB * vCC</item>
		<item>يحسب vBB / vCC ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB / vCC</item>
		<item>حساب vBB % vCC وتخزين النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB % vCC</item>
		<item>يحسب vBB وvCC (منطقي AND) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB &amp; vCC</item>
		<item>يحسب vBB | vCC (منطقي OR) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB | vCC</item>
		<item>يحسب vBB ^ vCC (OR حصريًا) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB ^ vCC</item>
		<item>يقوم بإزاحة vBB المتبقية بعدد البتات المحدد بواسطة vCC ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB</item>
		<item>يقوم بإزاحة vBB إلى اليمين بعدد البتات المحددة بواسطة vCC ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB >> vCC</item>
		<item>يقوم بإزاحة vBB دون الاحتفاظ بالعلامة إلى اليمين بعدد البتات المحددة بواسطة vCC، ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB >>> vCC</item>
		<item>يحسب (vBB، vBB+1) + (vCC، vCC+1) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) + (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) - (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) - (vCC، vCC+1)</item>
		<item>يحسب (vBB، vBB+1) * (vCC، vCC+1) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) * (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) / (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) / (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) % (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) % (vCC، vCC+1)</item>
		<item>يحسب (vBB، vBB+1) و (vCC، vCC+1) (منطقي AND) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) و (vCC، vCC+1)</item>
		<item>الحساب (vBB، vBB+1) | (vCC, vCC+1) (منطقي OR) ويخزن النتيجة في زوج من السجلات vAA, vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) | (vCC، vCC+1)</item>
		<item>يحسب (vBB، vBB+1) ^ (vCC، vCC+1) (AND حصريًا) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1) ^ (vCC، vCC+1)</item>
		<item>ينقل vBB، vBB+1 إلى اليسار بعدد البتات المحددة بواسطة vCC، ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA، vAA+1) = (vBB، vBB+1)</item>
		<item>ينقل vBB، vBB+1 إلى اليمين بعدد البتات المحددة بواسطة vCC، ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم طويلة (عدد صحيح).\n(vAA, vAA+1) = (vBB, vBB+1) >> vCC</item>
		<item>ينقل vBB، vBB+1 إلى اليمين دون الحفاظ على الإشارة بعدد البتات المحددة بواسطة vCC، ويخزن النتيجة في زوج من السجلات vAA، vA+1. جميع القيم طويلة (عدد صحيح).\n(vAA, vAA+1) = (vBB, vBB+1) >>> vCC</item>
		<item>حساب vBB + vCC وتخزين النتيجة في سجل vAA. جميع القيم تعويم.\nvAA = vBB + vCC</item>
		<item>حساب vBB - vCC وتخزين النتيجة في سجل vAA. جميع القيم تعويم.\nvAA = vBB - vCC</item>
		<item>يحسب vBB * vCC ويخزن النتيجة في سجل vAA. جميع القيم تعويم.\nvAA = vBB * vCC</item>
		<item>يحسب vBB / vCC ويخزن النتيجة في سجل vAA. جميع القيم تعويم.\nvAA = vBB / vCC</item>
		<item>حساب vBB % vCC وتخزين النتيجة في سجل vAA. جميع القيم تعويم.\nvAA = vBB % vCC</item>
		<item>يحسب (vBB، vBB+1) + (vCC، vCC+1) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vAA، vAA+1) = (vBB، vBB+1) + (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) - (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vAA، vAA+1) = (vBB، vBB+1) - (vCC، vCC+1)</item>
		<item>يحسب (vBB، vBB+1) * (vCC، vCC+1) ويخزن النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vAA، vAA+1) = (vBB، vBB+1) * (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) / (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vAA، vAA+1) = (vBB، vBB+1) / (vCC، vCC+1)</item>
		<item>حساب (vBB، vBB+1) % (vCC، vCC+1) وتخزين النتيجة في زوج التسجيل vAA، vAA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vAA، vAA+1) = (vBB، vBB+1) % (vCC، vCC+1)</item>
		<item>يحسب vA + vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA + vB</item>
		<item>يحسب vA - vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA - vB</item>
		<item>يحسب vA * vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA * vB</item>
		<item>يحسب vA / vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA / vB</item>
		<item>يحسب vA % vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA % vB</item>
		<item>يحسب vA وvB (منطقي AND) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA &amp; vB</item>
		<item>يحسب vA | vB (منطقي OR) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA | vB</item>
		<item>يحسب vA ^ vB (OR حصريًا) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA ^ vB</item>
		<item>يقوم بإزاحة vA إلى اليسار بعدد البتات المحددة بواسطة vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA</item>
		<item>يقوم بإزاحة vA إلى اليمين بعدد البتات المحددة بواسطة vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA >> vB</item>
		<item>يقوم بإزاحة vA دون الاحتفاظ بإشارته إلى اليمين بعدد البتات المحددة بواسطة vB، ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vA >>> vB</item>
		<item>يحسب (vA, vA+1) + (vB, vB+1) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) + (vB، vB+1)</item>
		<item>حساب (vA, vA+1) - (vB, vB+1) وتخزين النتيجة في زوج من السجلات vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) - (vB، vB+1)</item>
		<item>يحسب (vA, vA+1) * (vB, vB+1) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) * (vB، vB+1)</item>
		<item>حساب (vA, vA+1) / (vB, vB+1) وتخزين النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) / (vB، vB+1)</item>
		<item>حساب (vA, vA+1) % (vB, vB+1) وتخزين النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) % (vB، vB+1)</item>
		<item>يحسب (vA, vA+1) &amp; (vB, vB+1) (منطقي AND) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1) &amp; (vB، vB+1)</item>
		<item>يحسب (vA، vA+1) | (vB, vB+1) (منطقي OR) ويخزن النتيجة في زوج من السجلات vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA, vA+1) = (vA, vA+1) | (vB، vB+1)</item>
		<item>يحسب (vA, vA+1) &amp; (vB, vB+1) (حصريًا OR) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA, vA+1) = (vA, vA+1) ^ (vB, vB+1)</item>
		<item>ينقل vA, vA+1 إلى اليسار بعدد البتات المحددة بواسطة vB، ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA، vA+1) = (vA، vA+1)</item>
		<item>ينقل vA, vA+1 إلى اليمين بعدد البتات المحددة بواسطة vB، ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA, vA+1) = (vA, vA+1) >> vB</item>
		<item>ينقل vA, vA+1 إلى اليمين دون الاحتفاظ بالعلامة بعدد الأرقام المحددة بواسطة vB، ويخزن النتيجة في زوج من السجلات vA, vA+1. جميع القيم طويلة (عدد صحيح).\n(vA, vA+1) = (vA, vA+1) >>> vB</item>
		<item>يحسب vA + vB ويخزن النتيجة في سجل vA. جميع القيم تعويم.\nvA = vA + vB</item>
		<item>يحسب vA - vB ويخزن النتيجة في سجل vA. جميع القيم تعويم.\nvA = vA - vB</item>
		<item>يحسب vA * vB ويخزن النتيجة في سجل vA. جميع القيم تعويم.\nvA = vA * vB</item>
		<item>يحسب vA / vB ويخزن النتيجة في سجل vA. جميع القيم تعويم.\nvA = vA / vB</item>
		<item>يحسب vA % vB ويخزن النتيجة في سجل vA. جميع القيم تعويم.\nvA = vA % vB</item>
		<item>يحسب (vA, vA+1) + (vB, vB+1) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vA، vA+1) = (vA، vA+1) + (vB، vB+1)</item>
		<item>حساب (vA, vA+1) - (vB, vB+1) وتخزين النتيجة في زوج من السجلات vA, vA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vA، vA+1) = (vA، vA+1) - (vB، vB+1)</item>
		<item>يحسب (vA, vA+1) * (vB, vB+1) ويخزن النتيجة في زوج التسجيل vA, vA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vA، vA+1) = (vA، vA+1) * (vB، vB+1)</item>
		<item>حساب (vA, vA+1) / (vB, vB+1) وتخزين النتيجة في زوج التسجيل vA, vA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vA، vA+1) = (vA، vA+1) / (vB، vB+1)</item>
		<item>حساب (vA, vA+1) % (vB, vB+1) وتخزين النتيجة في زوج التسجيل vA, vA+1. جميع القيم مزدوجة (النقطة العائمة).\n(vA، vA+1) = (vA، vA+1) % (vB، vB+1)</item>
		<item>يحسب vB + 0xFFFF ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB + 0xFFFF</item>
		<item>يحسب 0xFFFF - vB ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = 0xFFFF - vB</item>
		<item>يحسب vB * 0xFFFF ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB * 0xFFFF</item>
		<item>يحسب vB / 0xFFFF ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB / 0xFFFF</item>
		<item>يحسب vB % 0xFFFF ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB % 0xFFFF</item>
		<item>يحسب vB و0xFFFF (منطقي AND) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB &amp; 0xFFFF</item>
		<item>يحسب vB | 0xFFFF (OR منطقي) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB | 0xFFFF</item>
		<item>يحسب vB ^ 0xFFFF (OR حصريًا) ويخزن النتيجة في سجل vA. جميع القيم صحيحة.\nvA = vB ^ 0xFFFF</item>
		<item>يحسب vBB + 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB + 0xFF</item>
		<item>يحسب 0xFF - vBB ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = 0xFF - vBB</item>
		<item>يحسب vBB * 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB * 0xFF</item>
		<item>يحسب vBB / 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB / 0xFF</item>
		<item>يحسب vBB % 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB % 0xFF</item>
		<item>يحسب vBB و0xFF (منطقي AND) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB &amp; 0xFF</item>
		<item>يحسب vBB | 0xFF (منطقي OR) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB | 0xFF</item>
		<item>يحسب vBB ^ 0xFF (OR حصريًا) ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB ^ 0xFF</item>
		<item>يقوم بإزاحة vBB المتبقية بعدد البتات المحددة بواسطة 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB</item>
		<item>يقوم بإزاحة vBB إلى اليمين بعدد البتات المحددة بواسطة 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB >> 0xFF</item>
		<item>يقوم بإزاحة vBB إلى اليمين بشكل إشارة بعدد البتات المحددة بواسطة 0xFF ويخزن النتيجة في سجل vAA. جميع القيم صحيحة.\nvAA = vBB >>> 0xFF</item>
		<item>يستدعي (يعمل) طريقة توقيع متعددة الأشكال مع المعلمات. موجود في ملفات Dex منذ الإصدار 038.</item>
		<item>يستدعي (يعمل) طريقة توقيع متعددة الأشكال مع معلمات، ولكن يجب أن تكون المعلمات موجودة في سجلات مرقمة بشكل تسلسلي. موجود في ملفات Dex منذ الإصدار 038.</item>
		<item>يسمح (يبدأ) بالاتصال بموقع يحتوي على معلمات. موجود في ملفات Dex منذ الإصدار 038.</item>
		<item>يسمح (يبدأ) باستدعاء موقع يحتوي على معلمات، ولكن يجب تضمين المعلمات في سجلات ذات أرقام بالترتيب. موجود في ملفات Dex منذ الإصدار 038.</item>
		<item>يضع مرجعًا لمقبض الأسلوب في سجل vAA. موجود في ملفات Dex منذ الإصدار 039.</item>
		<item>يضع مرجعًا للنموذج الأولي للأسلوب في سجل vAA. موجود في ملفات Dex منذ الإصدار 039.</item>
	</string-array>
</resources>