<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="smali_help_names">
		<item>ثبت می کند</item>
		<item>ارزش های تحت اللفظی</item>
		<item>انواع داده های اولیه</item>
	</string-array>
	<string-array name="smali_help_values" formatted="false">
		<item>vA یک ثبات 4 بیتی با محدوده مقدار v0 - v15 است\nvAA یک ثبات 8 بیتی با محدوده مقدار v0 - v255 است\nvAAAA یک ثبات 16 بیتی با محدوده مقدار v0 - v65535 است</item>
		<item>0xF، 0xFF و غیره استفاده می شود. برای نشان دادن مقادیر تحت اللفظی مانند رجیسترها، عدد F برای نشان دادن محدوده ای از مقادیر استفاده می شود، به عنوان مثال:\nمحدوده مقادیر 0xF با [-0x8، 0x7] نشان داده می شود.\nمحدوده مقادیر 0xFF با [-0x80، 0x7F] نشان داده می شود.</item>
		<item>V - void، Z - بولی، B - بایت\nC - char، S - کوتاه، I - int\nJ - طولانی، F - شناور، D - دو برابر\nvoid: فقط برای انواع برگشتی قابل استفاده است\nboolean: مقدار true یا false را ذخیره می کند\nبایت: یک عدد صحیح از 128- تا 127 را ذخیره می کند و 1 بایت را اشغال می کند.\nکوتاه: یک عدد صحیح از -32768 تا 32767 را ذخیره می کند و 2 بایت می گیرد.\nint: یک عدد صحیح از -2147483648 تا 2147483647 را ذخیره می کند و 4 بایت را اشغال می کند.\nlong: یک عدد صحیح از -9223372036854775808 تا 9223372036854775807 را ذخیره می کند و 8 بایت را اشغال می کند.\ndouble: یک عدد ممیز شناور از ±4.9*10³²4 تا ±1.7976931348623157*10³⁰8 را ذخیره می کند و 8 بایت را اشغال می کند. یک نقطه به عنوان جداکننده اعشاری در لفظ کسری استفاده می شود.\nfloat: یک عدد ممیز شناور از -3.4*10³8 تا 3.4*1038 را ذخیره می کند و 4 بایت را اشغال می کند.\nchar: یک کاراکتر را در رمزگذاری UTF-16 ذخیره می کند و 2 بایت را اشغال می کند، بنابراین محدوده مقادیر ذخیره شده از 0 تا 65535 است.</item>
		<item>هیچ اقدامی.</item>
		<item>مقدار ثبات vB را به ثبت vA منتقل می کند.</item>
		<item>مقدار ثبات vBBBB را به ثبات vAA منتقل می کند.</item>
		<item>مقدار ثبات vBBBB را به ثبات vAAAA منتقل می کند.</item>
		<item>مقدار طولانی/دوبل جفت رجیستر (vB، vB+1) را به جفت رجیستر vA، vA+1 منتقل می کند.</item>
		<item>مقدار طولانی/دوگانه یک جفت ثبات (vBBBB، vBBBB+1) را به یک جفت ثبات vAA، vAA+1 منتقل می کند.</item>
		<item>مقدار طولانی/دوگانه یک جفت ثبات (vBBBB، vBBBB+1) را به یک جفت ثبات vAAAA، vAAAA+1 منتقل می کند.</item>
		<item>یک مرجع شی را از ثبات vB به ثبات vA منتقل می کند.</item>
		<item>یک مرجع شی را از ثبات vBBBB به ثبات vAA منتقل می کند.</item>
		<item>یک مرجع شی را از ثبات vBBBB به ثبات vAAAA منتقل می کند.</item>
		<item>مقدار برگشتی متد قبلاً فراخوانی شده را به ثبات vAA منتقل می کند.</item>
		<item>مقدار long/double برگردانده شده توسط متد قبلاً فراخوانی شده را به جفت ثبات vAA، vAA+1 منتقل می کند.</item>
		<item>مرجع شی را که با روشی که قبلاً فراخوانی شده بود به رجیستر vAA منتقل می کند.</item>
		<item>ارجاع به شیء حذف شده صادر شده در طول فراخوانی متد (در حین اجرا) را به ثبات vAA منتقل می کند.</item>
		<item>بازگشت بدون ارزش بازگشتی</item>
		<item>با برگرداندن مقدار از ثبات vAA برگردید.</item>
		<item>با برگرداندن یک مقدار دوتایی/طولانی به یک جفت ثبات vAA، vAA+1 برگردید.</item>
		<item>با برگرداندن مقدار مرجع شیء از ثبات vAA برگردید.</item>
		<item>یک ثابت 4 بیتی را در ثبات vA قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در ثبات vAA قرار می دهد.</item>
		<item>یک عدد ثابت را در ثبات vAA قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در بیت های بالای ثبات vAA قرار می دهد. برای مقداردهی اولیه مقادیر شناور (میز شناور) استفاده می شود.</item>
		<item>یک ثابت عدد صحیح 16 بیتی را در جفت رجیستر vAA، vAA+1 قرار می دهد و ثابت عدد صحیح را به ثابت طولانی تبدیل می کند.</item>
		<item>یک ثابت عدد صحیح 32 بیتی را در جفت رجیستر vAA، vAA+1 قرار می دهد و ثابت عدد صحیح را به ثابت طولانی تبدیل می کند.</item>
		<item>یک ثابت 64 بیتی را در جفت رجیستر vAA، vAA+1 قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در 16 بیت بالای جفت ثبت vAA، vAA+1 قرار می دهد. برای مقداردهی اولیه دو (میز شناور) مقادیر استفاده می شود.</item>
		<item>ارجاع به رشته مشخص شده را در ثبات vAA قرار می دهد.</item>
		<item>ارجاع به رشته مشخص شده را در ثبات vAA قرار می دهد.</item>
		<item>ارجاع به ثابت رشته (رشته) شناسایی شده توسط string_id را در ثبات vAA قرار می دهد.</item>
		<item>مانیتور شی که توسط رجیستر vAA ارجاع داده می شود را دریافت می کند.</item>
		<item>مانیتور شی ارجاع شده توسط ثبات vAA را آزاد می کند.</item>
		<item>بررسی می کند که آیا یک مرجع شی موجود در ثبات vAA می تواند به کلاس شناسایی شده توسط type_id فرستاده شود. اگر نتواند یک ClassCastException را پرتاب می کند، در غیر این صورت اجرا ادامه می یابد.</item>
		<item>بررسی می کند که آیا محتوای ثبت vB نمونه ای از کلاس شناسایی شده توسط type_id است یا خیر. ثبات vA را در صورت وجود روی غیر صفر و در غیر این صورت 0 تنظیم می کند.\nvA = vB نمونه از نوع؟ 10</item>
		<item>تعداد عناصر آرایه را از ثبات vB تعیین می کند و مقدار را در ثبات vA قرار می دهد.\nvA = vB.length</item>
		<item>نمونه ای از نوع شی ایجاد می کند و ارجاع به نمونه ایجاد شده را در ثبات vAA قرار می دهد.</item>
		<item>یک آرایه جدید از متغیرهای type_id با اندازه عناصر ثبات vB ایجاد می کند و یک ارجاع به آرایه در ثبات vA قرار می دهد.</item>
		<item>یک آرایه داده جدید از نوع type_id ایجاد می کند و آن را با پارامترها پر می کند (یعنی آرایه های طولانی/دوگانه وجود ندارد، اما انواع مرجع مجاز هستند). ارجاع به آرایه جدید ایجاد شده را می توان با استفاده از دستور move-result-object بلافاصله بعد از این دستور (در صورت استفاده از یکی) بدست آورد.</item>
		<item>یک آرایه داده جدید از نوع type_id ایجاد می کند و آن را با طیف وسیعی از پارامترها پر می کند (یعنی آرایه طولانی/دوگانه وجود ندارد، اما انواع مرجع قابل قبول هستند). ارجاع به آرایه جدید ایجاد شده را می توان با استفاده از دستور move-result-object بلافاصله بعد از این دستور (در صورت استفاده از یکی) بدست آورد.</item>
		<item>آرایه ارجاع شده در ثبات vAA را با داده های ایستا پر می کند. مکان داده ها مجموع موقعیت دستور حاضر و افست است.</item>
		<item>یک شی استثنا پرتاب می کند. ارجاع به شی استثنا در ثبات vAA.</item>
		<item>پرش بدون قید و شرط به یک افست کوتاه (عدد صحیح) 8 بیتی.</item>
		<item>پرش بدون قید و شرط به افست 16 بیتی.</item>
		<item>پرش بدون قید و شرط به افست 32 بیتی.</item>
		<item>عملگر Switch را زمانی که ثابت های کنترل به یکدیگر نزدیک هستند (در یک ردیف) پیاده سازی می کند. این دستورالعمل از یک جدول شاخص استفاده می کند. افست دستورالعمل برای یک مورد خاص توسط شاخص vAA تعیین می شود. اگر شاخص vAA فراتر از جدول باشد، اجرا با عبارت بعدی (پیش‌فرض) ادامه می‌یابد.</item>
		<item>عملگر Switch را در صورت پراکندگی جدول پیاده سازی می کند. این دستورالعمل از جدولی استفاده می کند که برای هر ثابت، offset ها را مشخص می کند. اگر هیچ منطبقی در جدول یافت نشد، دستور بعدی اجرا می شود (مورد پیش فرض).</item>
		<item>مقادیر شناور (میز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبات vAA قرار می دهد:\nvAA = vBB &lt; vCC ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر شناور (میز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبات vAA قرار می دهد:\nvAA = vBB &lt; vCC ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر دوگانه (میز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبات vAA قرار می دهد:\nvAA = (vBB، vBB+1) &lt; (vCC، vCC+1) ? y\nبله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر دوگانه (میز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبات vAA قرار می دهد:\nvAA = (vBB، vBB+1) > (vCC، vCC+1) ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر long (integer) را در vBB و vCC مقایسه می کند و مقدار صحیح (integer) را در ثبات vAA قرار می دهد:\nvAA = (vBB، vBB+1) > (vCC، vCC+1) ? بله: 1، خیر: -1، برابر: 0</item>
		<item>اگر vA == vB به برچسب مشخص شده می پرد. vA و vB حاوی مقادیر صحیح هستند.\n(eq مخفف برابر است)</item>
		<item>اگر vA != vB به برچسب مشخص شده می پرد. vA و vB حاوی مقادیر صحیح هستند.\n(ne مخفف Not Equals است)</item>
		<item>اگر vA &lt; vB به برچسب مشخص شده می پرد. vA و vB حاوی مقادیر صحیح هستند.\n(مخفف کمتر از کمتر است)</item>
		<item>اگر vA به برچسب مشخص شده می پرد</item>
		<item>اگر vA > vB به برچسب مشخص شده می پرد. vA و vB حاوی مقادیر صحیح هستند.\n(gt مخفف Greater Than/More Than است)</item>
		<item>اگر vA >= vB به برچسب مشخص شده می پرد. vA و vB حاوی مقادیر صحیح هستند.\n(ge مخفف بزرگتر یا برابر است)</item>
		<item>اگر vAA == 0 باشد، به برچسب مشخص شده می پرد. vAA حاوی یک مقدار صحیح است.\n(eqz مخفف برابر با صفر است)</item>
		<item>اگر vAA != 0 باشد، به برچسب مشخص شده می پرد. vAA حاوی یک مقدار صحیح است.\n(nez مخفف Not Equals to Zero است)</item>
		<item>اگر vAA &lt; 0 باشد به برچسب مشخص شده می پرد. vAA دارای یک مقدار صحیح باشد.\n(ltz مخفف Less Than Zero است)</item>
		<item>در صورت vAA به برچسب مشخص شده می پرد</item>
		<item>اگر vAA > 0 باشد، به برچسب مشخص شده می پرد. vAA دارای یک مقدار صحیح است.\n(gtz مخفف بزرگتر از صفر است)</item>
		<item>اگر vAA >= 0 باشد، به برچسب مشخص شده می پرد. vAA حاوی یک مقدار صحیح است.\n(gez مخفف بزرگتر یا مساوی صفر است)</item>
		<item>یک مقدار صحیح در شاخص موجود در vCC از آرایه ارجاع شده در vBB دریافت می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ارجاع شده در vBB، یک مقدار دو/طول دریافت می کند و آن را در جفت ثبات vAA، vAA+1 قرار می دهد.\n(vAA، vAA+1) = vBB[vCC]</item>
		<item>در فهرست موجود در vCC، از آرایه ارجاع شده در vBB، ارجاعی به شی دریافت می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ای که در vBB ارجاع داده شده است، یک مقدار بولی دریافت می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>یک مقدار بایت (عدد صحیح) را در فهرست موجود در vCC از آرایه ارجاع شده در vBB بازیابی می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در فهرست موجود در vCC، از آرایه ارجاع شده در vBB، یک مقدار char را بازیابی می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>یک مقدار کوتاه (صحیح) را در فهرست موجود در vCC از آرایه ارجاع شده در vBB بازیابی می کند و آن را در ثبات vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>مقدار صحیح از vAA را در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>یک مقدار دوتایی/طولانی از جفت رجیستر vAA، vAA+1 را در آرایه ارجاع شده در vBB، با عنصر حاوی ثبات vCC قرار می دهد.\nvBB[vCC] = (vAA، vAA+1)</item>
		<item>ارجاع به یک شی از vAA را در آرایه ارجاع شده در vBB با عنصری با ثبات vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار بولی را از vAA در آرایه ارجاع شده توسط vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار بایت (عدد صحیح) را از vAA در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار کاراکتر (کاراکتر) را از vAA در آرایه ارجاع شده در vBB توسط عنصر با ثبات vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار کوتاه (صحیح) را از vAA در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار را از قسمت نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>یک مقدار دوتایی/طولانی را از یک فیلد نمونه می خواند و آن را در یک جفت ثبات (vA, vA+1) قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\n(vA, vA+1) = vB.field</item>
		<item>یک مرجع شی را از یک فیلد نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>یک مقدار بولی را از فیلد نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>یک مقدار بایت (عدد صحیح) را از یک فیلد نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>یک مقدار char را از یک فیلد نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>یک مقدار کوتاه (عدد صحیح) را از یک فیلد نمونه می خواند و آن را در ثبات vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvA = vB.field</item>
		<item>مقدار را از ثبات vA در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvB.field = vA</item>
		<item>یک مقدار دوتایی/طولانی از یک جفت رجیستر (vA, vA+1) را در یک فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvB.field = (vA، vA+1)</item>
		<item>ارجاع به یک شی از ثبات vA را در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvB.field = vA</item>
		<item>مقدار بولی را از ثبات vA در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبات vB است.\nvB.field = vA</item>
		<item>مقدار بایت (عدد صحیح) فیلد بولی مشخص شده را در نمونه ارجاع شده توسط ثبات vB برابر با مقدار ثبات vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقدار کاراکتر (کاراکتر) فیلد بولی مشخص شده را در نمونه ارجاع شده توسط ثبات vB برابر با مقدار ثبات vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقدار کوتاه (عدد صحیح) فیلد بولی مشخص شده را در نمونه ارجاع شده توسط ثبات vB برابر با مقدار ثبات vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقداری را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار دوتایی/طولانی را از یک فیلد ثابت می خواند و آن را در یک جفت ثبات vAA، vAA+1 قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مرجع شی را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار بولی را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار بایت (عدد صحیح) را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار char را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار کوتاه (عدد صحیح) را از یک فیلد ثابت می خواند و آن را در ثبات vAA قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار را از ثبات vAA در یک فیلد (فیلد استاتیک) قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار دوتایی/طولانی از یک جفت ثبات vAA، vAA+1 را در یک فیلد (فیلد استاتیک) قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>ارجاع به یک شی از ثبات vAA را در یک فیلد (فیلد استاتیک) قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار بولی را از ثبات vAA در یک فیلد (فیلد استاتیک) قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار بایت (عدد صحیح) را از ثبات vAA در یک فیلد (فیلد استاتیک) قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار کاراکتر را از ثبات vAA در یک فیلد ثابت قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار کوتاه (عدد صحیح) را از ثبات vAA در یک فیلد ثابت قرار می دهد. ثبات حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک متد مجازی با پارامترها را فراخوانی می کند (اجرا می کند). پارامترها در بریس های فرفری نشان داده شده اند. پارامتر اول (رجیستر v2) شامل یک مرجع به کلاس حاوی متد فراخوانی شده است، پارامتر دوم (محتویات ثبات v3) به متد فراخوانی شده ارسال می شود.</item>
		<item>یک متد مجازی با پارامترهای مستقیماً از کلاس والد را فراخوانی می کند (اجرا می کند).</item>
		<item>متدی را با پارامترها بدون مجوزهای متد مجازی فراخوانی می کند (اجرا می کند).</item>
		<item>یک متد استاتیک را با پارامترها فراخوانی می کند (اجرا می کند). پارامترها در بریس های فرفری نشان داده شده اند. پارامتر (محتویات ثبات v3) به متد فراخوانی شده ارسال می شود. کلاس حاوی متد فراخوانی شده بعد از بریس های فر نشان داده می شود.</item>
		<item>یک روش رابط را با پارامترها فراخوانی می کند (اجرا می کند).</item>
		<item>یک متد مجازی را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبات هایی با اعداد به ترتیب موجود باشند.</item>
		<item>یک متد مجازی با پارامترهای مستقیماً از کلاس والد را فرا می‌خواند (اجرا می‌کند)، اما پارامترها باید در ثبات‌هایی با اعداد متوالی موجود باشند.</item>
		<item>متدی را با پارامترهای بدون مجوزهای روش مجازی فراخوانی می کند (اجرا می کند)، اما پارامترها باید در رجیسترهایی با شماره متوالی قرار گیرند.</item>
		<item>یک متد استاتیک را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبات هایی با اعداد متوالی موجود باشند.</item>
		<item>یک متد واسط را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در رجیسترهایی با شماره متوالی قرار گیرند.</item>
		<item>vA = -vB را برای مقادیر از نوع عدد صحیح محاسبه می کند.</item>
		<item>vA = ~vB را برای مقادیر صحیح محاسبه می کند.\nvA = ~ vB</item>
		<item>(vA، vA+1) = -(vB، vB+1) را برای مقادیر نوع long (عدد صحیح) محاسبه می کند.</item>
		<item>(vA، vA+1) = ~(vB، vB+1) را برای مقادیر از نوع long (عدد صحیح) محاسبه می کند.</item>
		<item>vA = -vB را برای مقادیر شناور محاسبه می کند.</item>
		<item>(vA، vA+1) = -(vB، vB+1) را برای مقادیر دوگانه (میز شناور) محاسبه می کند.</item>
		<item>یک عدد صحیح را از vB به طولانی تبدیل می کند و آن را در جفت ثبات vA، vA+1 ذخیره می کند.\n(vA, vA+1) = (طولانی) vB</item>
		<item>یک عدد صحیح را از vB به یک شناور تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (شناور) vB</item>
		<item>یک عدد صحیح را از vB به یک مضاعف (میز شناور) تبدیل می کند و آن را در یک جفت ثبات vA، vA+1 ذخیره می کند.\n(vA, vA+1) = (دو برابر) vB</item>
		<item>یک مقدار طولانی (عدد صحیح) را از vB، vB+1 به یک عدد صحیح (صحیح) تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (int) (vB، vB+1)</item>
		<item>یک مقدار طولانی (عدد صحیح) را از vB، vB+1 به یک float (میز شناور) تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (شناور) (vB، vB+1)</item>
		<item>یک مقدار طولانی (صحیح) را از vB، vB+1 به دو (نقطه شناور) تبدیل می کند و آن را در یک جفت ثبات vA، vA+1 ذخیره می کند.\n(vA، vA+1) = (دوبل) (vB، vB+1)</item>
		<item>یک مقدار شناور (میز شناور) را از vB به یک مقدار صحیح (صحیح) تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (int)vB</item>
		<item>یک مقدار شناور (میز شناور) را از vB به یک مقدار طولانی (صحیح) تبدیل می کند و آن را در جفت ثبات vA، vA+1 ذخیره می کند.\n(vA, vA+1) = (طولانی) vB</item>
		<item>یک مقدار شناور (میز شناور) را از vB به مقدار دو برابر (میز شناور) تبدیل می کند و آن را در جفت ثبات vA، vA+1 ذخیره می کند.\n(vA, vA+1) = (دو برابر) vB</item>
		<item>یک مقدار دوگانه (میز شناور) را از vB، vB+1 به یک مقدار صحیح (صحیح) تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (int) (vB، vB+1)</item>
		<item>یک مقدار دوگانه (میز شناور) را از vB، vB+1 به یک مقدار طولانی (صحیح) تبدیل می کند و آن را در یک جفت ثبات vA، vA+1 ذخیره می کند.\n(vA، vA+1) = (طولانی) (vB، vB+1)</item>
		<item>یک مقدار دوگانه (میز شناور) را از vB، vB+1 به مقدار شناور (میز شناور) تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (شناور) (vB، vB+1)</item>
		<item>یک مقدار صحیح را از vB به مقدار بایت تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (بایت) vB</item>
		<item>یک مقدار صحیح را از vB به مقدار char تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (char)vB</item>
		<item>یک مقدار صحیح را از vB به یک مقدار کوتاه تبدیل می کند و آن را در ثبات vA ذخیره می کند.\nvA = (کوتاه) vB</item>
		<item>vBB + vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB + vCC</item>
		<item>vBB - vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB - vCC</item>
		<item>vBB * vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB * vCC</item>
		<item>vBB / vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB / vCC</item>
		<item>vBB % vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB % vCC</item>
		<item>vBB و vCC (منطقی AND) را محاسبه می کند و نتیجه را در رجیستر vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB و vCC</item>
		<item>محاسبه vBB | vCC (OR منطقی) و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB | vCC</item>
		<item>vBB ^ vCC (انحصاری OR) را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB ^ vCC</item>
		<item>vBB را با تعداد بیت های مشخص شده توسط vCC تغییر می دهد و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB</item>
		<item>vBB را با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >> vCC</item>
		<item>vBB را بدون حفظ علامت با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >>> vCC</item>
		<item>(vBB، vBB+1) + (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) + (vCC، vCC+1)</item>
		<item>(vBB, vBB+1) - (vCC, vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA, vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) - (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) * (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) * (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) / (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) / (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) % (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) % (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) و (vCC، vCC+1) (AND منطقی) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) و (vCC، vCC+1)</item>
		<item>محاسبه (vBB، vBB+1) | (vCC, vCC+1) (OR منطقی) و نتیجه را در یک جفت ثبات vAA, vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) | (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) ^ (vCC، vCC+1) (انحصاری AND) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) ^ (vCC، vCC+1)</item>
		<item>vBB، vBB+1 را با تعداد بیت های مشخص شده توسط vCC به سمت چپ منتقل می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1)</item>
		<item>vBB، vBB+1 را با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) >> vCC</item>
		<item>vBB، vBB+1 را بدون حفظ علامت توسط تعداد بیت‌های مشخص شده توسط vCC به راست تغییر می‌دهد و نتیجه را در یک جفت ثبات vAA، vA+1 ذخیره می‌کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vAA، vAA+1) = (vBB، vBB+1) >>> vCC</item>
		<item>vBB + vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر شناور هستند.\nvAA = vBB + vCC</item>
		<item>vBB - vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر شناور هستند.\nvAA = vBB - vCC</item>
		<item>vBB * vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر شناور هستند.\nvAA = vBB * vCC</item>
		<item>vBB / vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر شناور هستند.\nvAA = vBB / vCC</item>
		<item>vBB % vCC را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر شناور هستند.\nvAA = vBB % vCC</item>
		<item>(vBB، vBB+1) + (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vAA، vAA+1) = (vBB، vBB+1) + (vCC، vCC+1)</item>
		<item>(vBB, vBB+1) - (vCC, vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA, vAA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vAA، vAA+1) = (vBB، vBB+1) - (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) * (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vAA، vAA+1) = (vBB، vBB+1) * (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) / (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vAA، vAA+1) = (vBB، vBB+1) / (vCC، vCC+1)</item>
		<item>(vBB، vBB+1) % (vCC، vCC+1) را محاسبه می کند و نتیجه را در جفت ثبت vAA، vAA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vAA، vAA+1) = (vBB، vBB+1) % (vCC، vCC+1)</item>
		<item>vA + vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA + vB</item>
		<item>vA - vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA - vB</item>
		<item>vA * vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA * vB</item>
		<item>vA / vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA / vB</item>
		<item>vA % vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA % vB</item>
		<item>vA و vB (منطقی AND) را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA و vB</item>
		<item>محاسبه vA | vB (OR منطقی) و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA | vB</item>
		<item>vA ^ vB (انحصاری OR) را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA ^ vB</item>
		<item>vA را با تعداد بیت های مشخص شده توسط vB به چپ منتقل می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA</item>
		<item>vA را با تعداد بیت های مشخص شده توسط vB به سمت راست منتقل می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA >> vB</item>
		<item>vA را بدون حفظ علامت آن به سمت راست با تعداد بیت های مشخص شده توسط vB تغییر می دهد و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA >>> vB</item>
		<item>(vA, vA+1) + (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) + (vB، vB+1)</item>
		<item>(vA, vA+1) - (vB, vB+1) را محاسبه می کند و نتیجه را در یک جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) - (vB، vB+1)</item>
		<item>(vA, vA+1) * (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) * (vB، vB+1)</item>
		<item>(vA, vA+1) / (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) / (vB، vB+1)</item>
		<item>(vA, vA+1) % (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) % (vB، vB+1)</item>
		<item>(vA, vA+1) &amp; (vB, vB+1) (منطقی AND) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) و (vB، vB+1)</item>
		<item>محاسبه می کند (vA, vA+1) | (vB, vB+1) (OR منطقی) و نتیجه را در یک جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA, vA+1) = (vA, vA+1) | (vB، vB+1)</item>
		<item>(vA, vA+1) &amp; (vB, vB+1) (انحصاری OR) را محاسبه می کند و نتیجه را در جفت ثبت vA, vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1) ^ (vB، vB+1)</item>
		<item>vA، vA+1 را با تعداد بیت‌های مشخص شده توسط vB به چپ منتقل می‌کند و نتیجه را در جفت ثبات vA، vA+1 ذخیره می‌کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA، vA+1) = (vA، vA+1)</item>
		<item>vA، vA+1 را با تعداد بیت های مشخص شده توسط vB به سمت راست منتقل می کند و نتیجه را در جفت ثبات vA، vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA, vA+1) = (vA, vA+1) >> vB</item>
		<item>vA، vA+1 را بدون حفظ علامت با تعداد ارقام مشخص شده توسط vB به راست جابجا می کند و نتیجه را در یک جفت ثبات vA، vA+1 ذخیره می کند. همه مقادیر طولانی هستند (عدد صحیح).\n(vA, vA+1) = (vA, vA+1) >>> vB</item>
		<item>vA + vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر شناور هستند.\nvA = vA + vB</item>
		<item>vA - vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر شناور هستند.\nvA = vA - vB</item>
		<item>vA * vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر شناور هستند.\nvA = vA * vB</item>
		<item>vA / vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر شناور هستند.\nvA = vA / vB</item>
		<item>vA % vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر شناور هستند.\nvA = vA % vB</item>
		<item>(vA, vA+1) + (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vA، vA+1) = (vA، vA+1) + (vB، vB+1)</item>
		<item>(vA, vA+1) - (vB, vB+1) را محاسبه می کند و نتیجه را در یک جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vA، vA+1) = (vA، vA+1) - (vB، vB+1)</item>
		<item>(vA, vA+1) * (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vA، vA+1) = (vA، vA+1) * (vB، vB+1)</item>
		<item>(vA, vA+1) / (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vA، vA+1) = (vA، vA+1) / (vB، vB+1)</item>
		<item>(vA, vA+1) % (vB, vB+1) را محاسبه می کند و نتیجه را در جفت ثبات vA, vA+1 ذخیره می کند. همه مقادیر دو برابر هستند (میز شناور).\n(vA، vA+1) = (vA، vA+1) % (vB، vB+1)</item>
		<item>vB + 0xFFFF را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB + 0xFFFF</item>
		<item>0xFFFF - vB را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = 0xFFFF - vB</item>
		<item>vB * 0xFFFF را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB * 0xFFFF</item>
		<item>vB / 0xFFFF را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB / 0xFFFF</item>
		<item>vB % 0xFFFF را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB % 0xFFFF</item>
		<item>vB و 0xFFFF (منطقی AND) را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB و 0xFFFF</item>
		<item>محاسبه vB | 0xFFFF (OR منطقی) و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB | 0xFFFF</item>
		<item>vB ^ 0xFFFF (انحصاری OR) را محاسبه می کند و نتیجه را در ثبات vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vB ^ 0xFFFF</item>
		<item>vBB + 0xFF را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB + 0xFF</item>
		<item>0xFF - vBB را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = 0xFF - vBB</item>
		<item>vBB * 0xFF را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB * 0xFF</item>
		<item>vBB / 0xFF را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB / 0xFF</item>
		<item>vBB % 0xFF را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB % 0xFF</item>
		<item>vBB و 0xFF (منطقی AND) را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB و 0xFF</item>
		<item>محاسبه vBB | 0xFF (OR منطقی) و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB | 0xFF</item>
		<item>vBB ^ 0xFF (انحصاری OR) را محاسبه می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB ^ 0xFF</item>
		<item>vBB را با تعداد بیت های مشخص شده توسط 0xFF تغییر می دهد و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB</item>
		<item>vBB را بر اساس تعداد بیت های مشخص شده توسط 0xFF به سمت راست منتقل می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >> 0xFF</item>
		<item>سیگنال vBB را با تعداد بیت های مشخص شده توسط 0xFF به سمت راست منتقل می کند و نتیجه را در ثبات vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >>> 0xFF</item>
		<item>یک روش امضای چند شکلی را با پارامترها فراخوانی می کند (اجرا می کند). از نسخه 038 در فایل های Dex موجود است.</item>
		<item>یک روش امضای چند شکلی را با پارامترها فراخوانی می‌کند (اجرا می‌کند)، اما پارامترها باید در رجیسترهای شماره‌دار ترتیبی قرار گیرند. از نسخه 038 در فایل های Dex موجود است.</item>
		<item>فراخوانی یک سایت با پارامترها را می دهد (شروع می کند). از نسخه 038 در فایل های Dex موجود است.</item>
		<item>امکان فراخوانی یک سایت با پارامترها (شروع) را می دهد، اما پارامترها باید در رجیسترهایی با اعداد به ترتیب موجود باشند. از نسخه 038 در فایل های Dex موجود است.</item>
		<item>ارجاع به دسته متد را در ثبات vAA قرار می دهد. از نسخه 039 در فایل های Dex موجود است.</item>
		<item>ارجاع به نمونه اولیه روش را در ثبات vAA قرار می دهد. از نسخه 039 در فایل های Dex موجود است.</item>
	</string-array>
	<string-array name="copy_variants">
		<item>تغییر نام</item>
		<item>Rename files only</item>
		<item>جایگزینی</item>
		<item>انکار</item>
	</string-array>
	<string-array name="menu_pos">
		<item>چپ</item>
		<item>راست</item>
	</string-array>
	<string-array name="sort">
		<item>نام</item>
		<item>نام برعکس</item>
		<item>قالب</item>
		<item>قالب برعکس</item>
		<item>حجم</item>
		<item>حجم برعکس</item>
		<item>تاریخ</item>
		<item>تاریخ برعکس</item>
	</string-array>
	<string-array name="installLocation">
		<item>بدون تغییر</item>
		<item>خودکار</item>
		<item>فقط داخلی</item>
		<item>فقط خارجی</item>
	</string-array>
	<string-array name="auto_save_variants">
		<item>خاموش</item>
		<item>15 ثانیه</item>
		<item>30 ثانیه</item>
		<item>1 دقیقه</item>
		<item>5 دقیقه</item>
	</string-array>
	<string-array name="editor_themes">
		<item>پیشفرض</item>
		<item>جدید</item>
	</string-array>
</resources>