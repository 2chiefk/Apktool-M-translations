<?xml version="1.0" encoding="utf-8"?>
<resources>
	<string-array name="smali_help_names">
		<item>ثبت ها</item>
		<item>مقادیر لفظی</item>
		<item>انواع داده های اولیه</item>
	</string-array>
	<string-array name="smali_help_values" formatted="false">
		<item>ثبت vA یک ثبت 4 بیتی با محدوده مقدار v0 - v15 است\nثبت vAA یک ثبت 8 بیتی با محدوده مقدار v0 - v255\nثبت vAAAA یک ثبت 16 بیتی با محدوده مقدار v0 - v65535 است.</item>
		<item>مقادیر 0xF ،0xFF و غیره برای نمایش مقادیر لفظی استفاده می شود. مانند ثبت ها؛ عدد F برای نشان دادن محدوده ای از مقادیر استفاده می شود، برای مثال:\nمحدوده مقادیر 0xF با [0x8, 0x7-] نشان داده می شود\nمحدوده مقادیر 0xFF با [0x80, 0x7F-] نشان داده می شود.</item>
		<item>V - تهی (void)، Z - منطقی (boolean)، B - بایت (byte)\nC - نویسه (char)، S - کوتاه (short)، I - عدد صحیح (int)\nJ - طولانی (long)، F - شناور (float)، D - دوبرابر (double)\nتهی یا void: فقط برای انواع برگشتی قابل استفاده است\nمنطقی یا boolean: فقط مقدار true یا false را ذخیره می کند\nبایت یا byte: یک عدد صحیح از 128- تا 127 را ذخیره می کند و 1 بایت را اشغال می کند\nکوتاه یا short: یک عدد صحیح از 32768- تا 32767 را ذخیره می کند و 2 بایت را اشغال می‌کند\nعدد صحیح یا int: یک عدد صحیح از 2147483648- تا 2147483647 را ذخیره می کند و 4 بایت را اشغال می کند.\nطولانی یا long: یک عدد صحیح از 9223372036854775808- تا 9223372036854775807 را ذخیره می کند و 8 بایت را اشغال می کند.\nدوبرابر یا double: یک عدد اعشاری از 10³²⁴*4.9± تا 10³⁰⁸*1.7976931348623157± را ذخیره می کند و 8 بایت را اشغال می کند. نقطه به عنوان جداکننده اعشاری در مقادیر لفظی کسری استفاده می شود.\nشناور یا float: یک عدد اعشاری از 10³⁸*3.4- تا 10³⁸*3.4 را ذخیره می کند و 4 بایت را اشغال می کند.\nنویسه یا char: یک نویسه را در رمزگذاری UTF-16 ذخیره می کند و 2 بایت را اشغال می کند، بنابراین محدوده مقادیر ذخیره شده از 0 تا 65535 است.</item>
		<item>بدون عملیات.</item>
		<item>مقدار ثبت vB را به ثبت vA منتقل می کند.</item>
		<item>مقدار ثبت vBBBB را به ثبت vAA منتقل می کند.</item>
		<item>مقدار ثبت vBBBB را به ثبت vAAAA منتقل می کند.</item>
		<item>مقدار long/double یک جفت ثبت (vB, vB+1) را به یک جفت ثبت vA, vA+1 منتقل می کند.</item>
		<item>مقدار long/double یک جفت ثبت (vBBBB, vBBBB+1) را به یک جفت ثبت vAA, vAA+1 منتقل می کند.</item>
		<item>مقدار long/double یک جفت ثبت (vBBBB, vBBBB+1) را به یک جفت ثبت vAAAA, vAAAA+1 منتقل می کند.</item>
		<item>یک مرجع شی را از ثبت vB به ثبت vA منتقل می کند.</item>
		<item>یک مرجع شی را از ثبت vBBBB به ثبت vAA منتقل می کند.</item>
		<item>یک مرجع شی را از ثبت vBBBB به ثبت vAAAA منتقل می کند.</item>
		<item>مقدار برگشتی روش (method) قبلاً فراخوانی شده را به ثبت vAA منتقل می کند.</item>
		<item>مقدار long/double برگردانده شده توسط روش (method) قبلاً فراخوانی شده را به جفت ثبت vAA, vAA+1 منتقل می کند.</item>
		<item>مرجع شی برگشتی را که با روشی (متدی) که قبلاً فراخوانی شده بود به ثبت vAA منتقل می کند.</item>
		<item>ارجاع به شیء استثناء شده صادر شده در طول فراخوانی روش (در حین اجرا) را به ثبت vAA منتقل می کند.</item>
		<item>بازگشت بدون مقدار بازگشتی</item>
		<item>برگشت با برگرداندن مقدار از ثبت vAA.</item>
		<item>برگشت با برگرداندن یک مقدار double/long به یک جفت از ثبت vAA, vAA+1.</item>
		<item>برگشت با برگرداندن مقدار مرجع شیء از ثبت vAA.</item>
		<item>یک ثابت 4 بیتی را در ثبت vA قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در ثبت vAA قرار می دهد.</item>
		<item>یک ثابت عدد صحیح (integer) را در ثبت vAA قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در بیت های بالای ثبت vAA قرار می دهد. برای مقداردهی اولیه مقادیر اعشار (ممیز شناور) استفاده می شود.</item>
		<item>یک ثابت عدد صحیح 16 بیتی را در جفت ثبت vAA, vAA+1 قرار می دهد و ثابت عدد صحیح (integer) را به ثابت طولانی (long) تبدیل می کند.</item>
		<item>یک ثابت عدد صحیح 32 بیتی را در جفت ثبت vAA, vAA+1 قرار می دهد و ثابت عدد صحیح (integer) را به ثابت طولانی (long) تبدیل می کند.</item>
		<item>یک ثابت 64 بیتی را در جفت ثبت vAA, vAA+1 قرار می دهد.</item>
		<item>یک ثابت 16 بیتی را در 16 بیت بالای جفت ثبت vAA, vAA+1 قرار می دهد. برای مقداردهی اولیه مقادیر double (ممیز شناور) استفاده می شود.</item>
		<item>ارجاع به رشته مشخص شده را در ثبت vAA قرار می دهد.</item>
		<item>ارجاع به رشته مشخص شده را در ثبت vAA قرار می دهد.</item>
		<item>ارجاع به ثابت رشته (string) شناسایی شده توسط string_id را در ثبت vAA قرار می دهد.</item>
		<item>ناظر شی که توسط ثبت vAA ارجاع داده می شود را دریافت می کند.</item>
		<item>Releases the object monitor referenced by the vAA register.</item>
		<item>بررسی می کند که آیا یک مرجع شی موجود در ثبت vAA می تواند به کلاس شناسایی شده توسط type_id فرستاده شود. اگر نتواند یک ClassCastException را پرتاب می کند، در غیر این صورت اجرا ادامه می یابد.</item>
		<item>بررسی می کند که آیا محتوای ثبت vB نمونه ای از کلاس شناسایی شده توسط type_id است یا خیر. ثبت vA را در صورت وجود روی غیر صفر و در غیر این صورت 0 تنظیم می کند.\nvA = vB instanceOf type ? 10</item>
		<item>تعداد عناصر آرایه را از ثبت vB تعیین می کند و مقدار را در ثبت vA قرار می دهد.\nvA = vB.length</item>
		<item>نمونه ای از نوع شی ایجاد می کند و ارجاع به نمونه ایجاد شده را در ثبت vAA قرار می دهد.</item>
		<item>یک آرایه جدید از متغیرهای type_id با اندازه عناصر ثبت vB ایجاد می کند و یک ارجاع به آرایه در ثبت vA قرار می دهد.</item>
		<item>یک آرایه داده جدید از نوع type_id ایجاد می کند و آن را با پارامترها پر می کند (یعنی آرایه های long/double وجود ندارد، اما انواع مرجع مجاز هستند). ارجاع به آرایه جدید ایجاد شده را می توان با استفاده از دستور move-result-object بلافاصله بعد از این دستور (اگر قرار است از یکی استفاده شود) بدست آورد.</item>
		<item>یک آرایه داده جدید از نوع type_id ایجاد می کند و آن را با محدوده ای از پارامترها پر می کند (یعنی آرایه long/double وجود ندارد، اما انواع مرجع قابل قبول هستند). ارجاع به آرایه جدید ایجاد شده را می توان با استفاده از دستور move-result-object بلافاصله بعد از این دستور (اگر قرار است از یکی استفاده شود) بدست آورد.</item>
		<item>آرایه ارجاع شده در ثبت vAA را با اطلاعات ایستا (static data) پر می کند. مکان اطلاعات مجموع موقعیت دستور حاضر و انحراف (offset) است.</item>
		<item>یک شی استثنا پرتاب می کند. ارجاع به شی استثنا در ثبت vAA.</item>
		<item>پرش غیر شرطی به یک انحراف short (integer) 8 بیتی.</item>
		<item>پرش غیر شرطی به انحراف (offset) 16 بیتی.</item>
		<item>پرش غیر شرطی به انحراف (افست) 32 بیتی.</item>
		<item>عملگر Switch را زمانی که ثابت های کنترل به یکدیگر نزدیک هستند (در یک ردیف) پیاده سازی می کند. دستورالعمل از یک جدول شاخص گذاری استفاده می کند. انحراف (offset) دستورالعمل برای یک مورد خاص توسط شاخص vAA تعیین می شود. اگر شاخص vAA فراتر از جدول باشد، اجرا با دستور بعدی (پیش‌فرض) ادامه می‌یابد.</item>
		<item>عملگر Switch را در صورت پراکندگی جدول پیاده سازی می کند. این دستورالعمل از جدولی استفاده می کند که برای هر یک از ثابت ها offset ها را مشخص می کند. اگر هیچ تطبیقی در جدول یافت نشد، دستور بعدی اجرا می شود (مورد پیش فرض).</item>
		<item>مقادیر float (ممیز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبت vAA قرار می دهد.:\nvAA = vBB &lt; vCC ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر float (ممیز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبت vAA قرار می دهد.:\nvAA = vBB &lt; vCC ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر double (ممیز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبت vAA قرار می دهد:\nvAA = (vBB, vBB+1) &lt; (vCC, vCC+1) ? y\nبله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر double (ممیز شناور) را در vBB و vCC مقایسه می کند و مقدار صحیح را در ثبت vAA قرار می دهد:\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ? بله: 1، خیر: -1، برابر: 0</item>
		<item>مقادیر long (عدد صحیح) را در vBB و vCC مقایسه می کند و مقدار صحیح (integer) را در ثبت vAA قرار می دهد:\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ? بله: 1، خیر: -1، برابر: 0</item>
		<item>اگر vA == vB به برچسب مشخص شده پرش می‌کند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه eq مخفف Equals (برابر) است)</item>
		<item>اگر vA != vB به برچسب مشخص شده پرش می‌کند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه ne مخفف Not Equals (برابر نیست) است)</item>
		<item>اگر vA &lt; vB به برچسب مشخص شده پرش می‌کند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه lt مخفف Less Than (کمتر از) است)</item>
		<item>اگر vA &lt;= vB به برچسب مشخص شده پرش می‌کند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه le مخفف برای Less than or Equal/Less or equal (کمتر از یا مساوی/کمتر یا مساوی)) است</item>
		<item>اگر vA > vB به برچسب مشخص شده پرش میکند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه gt مخفف Greater Than/More Than (بزرگتر از/بیشتر از) است)</item>
		<item>اگر vA >= vB به برچسب مشخص شده پرش می‌کند. vA و vB حاوی مقادیر صحیح هستند.\n(کلمه ge مخفف Greater than or Equal (بزرگتر از یا برابر) است)</item>
		<item>اگر vAA == 0 باشد، به برچسب مشخص شده پرش می‌کند. vAA حاوی یک مقدار صحیح است.\n(کلمه eqz مخفف برابر با صفر (Equals to zero) است)</item>
		<item>اگر vAA != 0 باشد، به برچسب مشخص شده پرش می‌کند. vAA حاوی یک مقدار صحیح است.\n(کلمه nez مخفف Not Equals to Zero (برابر با صفر نیست) است)</item>
		<item>اگر vAA &lt; 0 باشد به برچسب مشخص شده پرش می‌کند. vAA حاوی یک عدد صحیح است.\n(کلمه ltz مخفف Less Than Zero (کمتر از صفر) است)</item>
		<item>اگر vAA &lt;= 0 باشد، به برچسب مشخص شده پرش می‌کند. vAA حاوی یک عدد صحیح است.\n(کلمه lez مخفف Less than or Equal to Zero (کمتر از یا مساوی به صفر)/Less or equal to zero (کمتر یا برابر با صفر) است)</item>
		<item>اگر vAA > 0 باشد، به برچسب مشخص شده پرش می‌کند. vAA دارای یک مقدار صحیح است.\n(کلمه gtz مخفف Greater Than Zero (بزرگتر از صفر) است)</item>
		<item>اگر vAA >= 0 باشد، به برچسب مشخص شده پرش می‌کند. vAA حاوی یک مقدار صحیح است.\n(gez مخفف Greater than or Equal to Zero (بزرگتر از یا برابر با صفر) است)</item>
		<item>یک مقدار صحیح در شاخص موجود در vCC از آرایه ارجاع شده در vBB دریافت می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ارجاع شده در vBB, یک مقدار double/long دریافت می کند و آن را در جفت ثبت vAA, vAA+1 قرار می دهد.\n(vAA, vAA+1) = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ارجاع شده در vBB, یک ارجاع به شی دریافت می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ای که در vBB ارجاع داده شده است، یک مقدار منطقی (boolean) دریافت می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>یک مقدار بایت (عدد صحیح) را در شاخص موجود در vCC از آرایه ارجاع شده در vBB بازیابی می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>در شاخص موجود در vCC، از آرایه ارجاع شده در vBB, یک مقدار char را بازیابی می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>یک مقدار short (integer) را در شاخص موجود در vCC از آرایه ارجاع شده در vBB بازیابی می کند و آن را در ثبت vAA قرار می دهد.\nvAA = vBB[vCC]</item>
		<item>مقدار صحیح از vAA را در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>یک مقدار double/long از جفت ثبت vAA, vAA+1 را در آرایه ارجاع شده در vBB, با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = (vAA, vAA+1)</item>
		<item>ارجاع به یک شی از vAA را در آرایه ارجاع شده در vBB با یک عنصر با ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار منطقی (boolean) را از vAA در آرایه ارجاع شده توسط vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار byte (عدد صحیح) را از vAA در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار char (نویسه) را از vAA در آرایه ارجاع شده در vBB توسط عنصر با ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار short (عدد صحیح) را از vAA در آرایه ارجاع شده در vBB با عنصر حاوی ثبت vCC قرار می دهد.\nvBB[vCC] = vAA</item>
		<item>مقدار را از فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد.  ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>یک مقدار double/long را از یک فیلد نمونه می خواند و آن را در یک جفت ثبت (vA, vA+1) قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\n(vA, vA+1) = vB.field</item>
		<item>یک مرجع شی را از یک فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>یک مقدار منطقی (boolean) را از فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>یک مقدار byte (عدد صحیح) را از یک فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>یک مقدار char را از یک فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>یک مقدار short (عدد صحیح) را از یک فیلد نمونه می خواند و آن را در ثبت vA قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvA = vB.field</item>
		<item>مقدار را از ثبت vA در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvB.field = vA</item>
		<item>یک مقدار double/long از یک جفت ثبت (vA, vA+1) را در یک فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvB.field = (vA, vA+1)</item>
		<item>ارجاع به یک شی از ثبت vA را در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvB.field = vA</item>
		<item>مقدار منطقی (boolean) را از ثبت vA در فیلد نمونه قرار می دهد. ارجاع به کلاس حاوی این فیلد در ثبت vB است.\nvB.field = vA</item>
		<item>مقدار byte (عدد صحیح) فیلد Boolean مشخص شده را در نمونه ارجاع شده توسط ثبت vB برابر با مقدار ثبت vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقدار char (نویسه) فیلد Boolean مشخص شده را در نمونه ارجاع شده توسط ثبت vB برابر با مقدار ثبت vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقدار short (عدد صحیح) فیلد Boolean مشخص شده را در نمونه ارجاع شده توسط ثبت vB برابر با مقدار ثبت vA تنظیم می کند، یعنی:\nvB.field = vA</item>
		<item>مقداری را از یک فیلد ایستا یا static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار double/long را از یک فیلد static می خواند و آن را در یک جفت ثبت vAA, vAA+1 قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مرجع شی را از یک فیلد static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار Boolean را از یک فیلد static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار byte (عدد صحیح) را از یک فیلد static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار char را از یک فیلد static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار short (عدد صحیح) را از یک فیلد static می خواند و آن را در ثبت vAA قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار را از ثبت vAA در یک فیلد (static field) قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار double/long از یک جفت ثبت vAA, vAA+1 را در یک فیلد (static field) قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>ارجاع به یک شی از ثبت vAA را در یک فیلد (static field) قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار Boolean را از ثبت vAA در یک فیلد (static field) قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک مقدار byte (عدد صحیح) را از ثبت vAA در یک فیلد (static field) قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار char را از ثبت vAA در یک فیلد static قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>مقدار short (عدد صحیح) را از ثبت vAA در یک فیلد static قرار می دهد. ثبت حاوی ارجاع به کلاس حاوی این فیلد استفاده نمی شود.</item>
		<item>یک روش مجازی (virtual method) با پارامترها را فراخوانی می کند (اجرا می کند). پارامترها در دوابرو (curly braces) نشان داده شده اند. پارامتر اول (ثبت v2) شامل یک مرجع به کلاس حاوی روش (متد) فراخوانی شده است، پارامتر دوم (محتویات ثبت v3) به روش فراخوانی شده ارسال می شود.</item>
		<item>یک روش مجازی (virtual method) با پارامترها را مستقیماً از کلاس والد فراخوانی می کند (اجرا می کند).</item>
		<item>روشی را با پارامترها بدون مجوزهای روش مجازی (virtual method) فراخوانی می کند (اجرا می کند).</item>
		<item>یک روش ایستا یا static method را با پارامترها فراخوانی می کند (اجرا می کند). پارامترها در دوابرو (آکولاد) نشان داده می‌شوند. پارامتر (محتویات ثبت v3) به روش یا method فراخوانی شده ارسال می شود. کلاس حاوی روش فراخوانی شده بعد از دوابرو (آکولاد) نشان داده می شود.</item>
		<item>یک روش رابط را با پارامترها فراخوانی می کند (اجرا می کند).</item>
		<item>یک روش مجازی یا virtual method را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبت هایی با اعداد به ترتیب موجود باشند.</item>
		<item>یک روش مجازی را با پارامترهای مستقیماً از کلاس والد فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبت هایی با اعداد متوالی قرار گیرند.</item>
		<item>روشی را با پارامترهای بدون مجوزهای روش مجازی فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبت هایی با اعداد متوالی قرار گیرند.</item>
		<item>یک روش ایستا یا static method را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبت هایی با اعداد متوالی موجود باشند.</item>
		<item>یک روش رابط یا interface method را با پارامترها فراخوانی می کند (اجرا می کند)، اما پارامترها باید در ثبت هایی با اعداد متوالی قرار گیرند.</item>
		<item>محاسبه vA = -vB برای مقادیر از نوع عدد صحیح.</item>
		<item>محاسبه vA = ~vB برای مقادیر از نوع صحیح.\nvA = ~vB</item>
		<item>محاسبه (vA, vA+1) = -(vB, vB+1) برای مقادیر از نوع طولانی یا نوع long (عدد صحیح).</item>
		<item>محاسبه (vA, vA+1) = ~(vB, vB+1) برای مقادیر از نوع طولانی یا long (عدد صحیح).</item>
		<item>محاسبه vA = -vB برای مقادیر از نوع اعشاری (ممیز شناور).</item>
		<item>محاسبه (vA, vA+1) = -(vB, vB+1) برای مقادیر از نوع دوبرابر double (ممیز شناور).</item>
		<item>یک عدد صحیح یا int را از vB به طولانی یا long تبدیل می کند و آن را در جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (long) vB</item>
		<item>یک عدد صحیح یا int را از vB به ممیز شناور یا float تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (float) vB</item>
		<item>یک integer (عدد صحیح) را از vB به double (ممیز شناور) تبدیل می کند و آن را در یک جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (double) vB</item>
		<item>یک مقدار long (عدد صحیح) را از vB, vB+1 به یک integer (عدد صحیح) تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (int) (vB, vB+1)</item>
		<item>یک مقدار long (عدد صحیح) را از vB, vB+1 به یک float (ممیز شناور) تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (float) (vB, vB+1)</item>
		<item>یک مقدار long (عدد صحیح) را از vB, vB+1 به double (ممیز شناور) تبدیل می کند و آن را در یک جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (double) (vB, vB+1)</item>
		<item>یک مقدار float (ممیز شناور) را از vB به یک مقدار integer (عدد صحیح) تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (int)vB</item>
		<item>یک مقدار floar (ممیز شناور) را از vB به یک مقدار long (عدد صحیح) تبدیل می کند و آن را در جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (long) vB</item>
		<item>یک مقدار float (ممیز شناور) را از vB به یک مقدار double (ممیز شناور) تبدیل می کند و آن را در جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (double) vB</item>
		<item>یک مقدار double (ممیز شناور) را از vB, vB+1 به یک integer (عدد صحیح) تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (int) (vB, vB+1)</item>
		<item>یک مقدار double (ممیز شناور) را از vB, vB+1 به یک مقدار long (عدد صحیح) تبدیل می کند و آن را در یک جفت ثبت vA, vA+1 ذخیره می کند.\n(vA, vA+1) = (long) (vB, vB+1)</item>
		<item>یک مقدار double (ممیز شناور) را از vB, vB+1 به یک مقدار float (ممیز شناور) تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (float) (vB, vB+1)</item>
		<item>یک مقدار integer را از vB به مقدار byte تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (byte) vB</item>
		<item>یک مقدار integer را از vB به مقدار char تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (char)vB</item>
		<item>یک مقدار integer را از vB به یک مقدار short تبدیل می کند و آن را در ثبت vA ذخیره می کند.\nvA = (short) vB</item>
		<item>محاسبه vBB + vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB + vCC</item>
		<item>محاسبه vBB - vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB - vCC</item>
		<item>محاسبه vBB * vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB * vCC</item>
		<item>محاسبه vBB / vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB / vCC</item>
		<item>محاسبه vBB % vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB % vCC</item>
		<item>محاسبه vBB &amp;  vCC (AND منطقی) و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB &amp; vCC</item>
		<item>محاسبه vBB | vCC (OR منطقی) و ذخیره نتیجه در ثبت vAA.  همه مقادیر عدد صحیح هستند.\nvAA = vBB |  vCC</item>
		<item>محاسبه vBB ^ vCC (انحصاری OR) و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB ^ vCC</item>
		<item>ثبت vBB را بر اساس تعداد بیت های مشخص شده توسط vCC به چپ منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB &lt;&lt; vCC</item>
		<item>ثبت vBB را با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >> vCC</item>
		<item>ثبت vBB را بدون حفظ علامت با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >>> vCC</item>
		<item>محاسبه (vBB, vBB+1) + (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) + (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) - (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) - (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) * (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) * (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) / (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) / (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) % (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) % (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) &amp; (vCC, vCC+1) (منطقی AND) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) &amp; (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) | (vCC, vCC+1) (منطقی OR) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) | (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) ^ (vCC, vCC+1) (انحصاری AND) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) ^ (vCC, vCC+1)</item>
		<item>جفت ثبت vBB, vBB+1 را با تعداد بیت های مشخص شده توسط vCC به سمت چپ منتقل می کند و نتیجه را در جفت ثبت vAA, vAA+1 ذخیره می کند. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) &lt;&lt; vCC</item>
		<item>جفت ثبت vBB, vBB+1 را با تعداد بیت های مشخص شده توسط vCC به سمت راست منتقل می کند و نتیجه را در جفت ثبت vAA, vAA+1 ذخیره می کند. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) >> vCC</item>
		<item>جفت ثبت vBB, vBB+1 را بدون حفظ علامت توسط تعداد بیت‌های مشخص شده توسط vCC به راست تغییر می‌دهد و نتیجه را در یک جفت ثبات vAA, vA+1 ذخیره می‌کند. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) >>> vCC</item>
		<item>محاسبه vBB + vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvAA = vBB + vCC</item>
		<item>محسابه vBB - vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvAA = vBB - vCC</item>
		<item>محاسبه vBB * vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvAA = vBB * vCC</item>
		<item>محاسبه vBB / vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvAA = vBB / vCC</item>
		<item>محاسبه vBB % vCC و ذخیره نتیجه در ثبت vAA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvAA = vBB % vCC</item>
		<item>محاسبه (vBB, vBB+1) + (vCC, vCC+1) و ذخیره نتیجه در حفاظت ثبت vAA, vAA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) + (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) - (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) - (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) * (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) * (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) / (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) / (vCC, vCC+1)</item>
		<item>محاسبه (vBB, vBB+1) % (vCC, vCC+1) و ذخیره نتیجه در جفت ثبت vAA, vAA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vAA, vAA+1) = (vBB, vBB+1) % (vCC, vCC+1)</item>
		<item>محاسبه vA + vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA + vB</item>
		<item>محاسبه vA - vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA - vB</item>
		<item>محاسبه vA * vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA * vB</item>
		<item>محاسبه vA / vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA / vB</item>
		<item>محاسبه vA % vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA % vB</item>
		<item>محاسبه vA &amp; vB (AND منطقی) و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA &amp; vB</item>
		<item>محاسبه vA | vB (OR منطقی) و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vA | vB</item>
		<item>محاسبه vA ^ vB (OR انحصاری) و ذخیره نتیجه در ثبت vA. All همه مقادیر عدد صحیح هستند.\nvA = vA ^ vB</item>
		<item>ثبت vA را با تعداد بیت های مشخص شده توسط vB به چپ منتقل می کند و نتیجه را در ثبت vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA &lt;&lt; vB</item>
		<item>ثبت vA را با تعداد بیت های مشخص شده توسط vB به سمت راست منتقل می کند و نتیجه را در ثبت vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA >> vB</item>
		<item>ثبت vA را بدون حفظ علامت آن به سمت راست با تعداد بیت های مشخص شده توسط vB تغییر می دهد و نتیجه را در ثبت vA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvA = vA >>> vB</item>
		<item>محاسبه (vA, vA+1) + (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) + (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) - (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) - (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) * (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) * (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) / (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) / (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) % (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) % (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) &amp; (vB, vB+1) (AND منطقی) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) &amp; (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) | (vB, vB+1) (OR منطقی) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) | (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) &amp; (vB, vB+1) (OR انحصاری) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) ^ (vB, vB+1)</item>
		<item>جفت ثبت vA, vA+1 را با تعداد بیت‌های مشخص شده توسط vB به چپ منتقل می‌کند و نتیجه را در جفت ثبت vA, vA+1 ذخیره می‌کند. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) &lt;&lt; vB</item>
		<item>جفت ثبت vA, vA+1 را با تعداد بیت های مشخص شده توسط vB به سمت راست منتقل می کند و نتیجه را در جفت ثبت vA, vA+1 ذخیره می کند. همه مقادیر طولانی یا long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) >> vB</item>
		<item>جفت ثبت vA, vA+1 را بدون حفظ علامت توسط تعداد ارقام مشخص شده توسط vB به راست جابجا می کند و نتیجه را در یک جفت ثبت vA, vA+1 ذخیره می کند. همه مقادیر طولانی با long (عدد صحیح) هستند.\n(vA, vA+1) = (vA, vA+1) >>> vB</item>
		<item>محاسبه vA + vB و ذخیره نتیجه در ثبت vA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvA = vA + vB</item>
		<item>محاسبه vA - vB و ذخیره نتیجه در ثبت vA. همه مقادیر اعشاری (ممیز شناور) هستند.\nvA = vA - vB</item>
		<item>محاسبه vA * vB و ذخیره نتیجه در ثبت vA. همه مقادیر اعشاری (ممیز شناور) یا float هستند.\nvA = vA * vB</item>
		<item>محاسبه vA / vB و ذخیره نتیجه در ثبت vA. همه مقادیر اعشاری (ممیز شناور) یا float هستند.\nvA = vA / vB</item>
		<item>محاسبه vA % vB و ذخیره نتیجه در ثبت vA. همه مقادیر اعشاری (ممیز شناور) یا float هستند.\nvA = vA % vB</item>
		<item>محاسبه (vA, vA+1) + (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر double (ممیز شناور) هستند.\n(vA, vA+1) = (vA, vA+1) + (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) - (vB, vB+1)  و ذخیره نتیجه در یک جفت ثبت vA, vA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vA, vA+1) = (vA, vA+1) - (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) * (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر double (ممیز شناور) هستند.\n(vA, vA+1) = (vA, vA+1) * (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) / (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر دوبرابر یا double (ممیز شناور) هستند.\n(vA, vA+1) = (vA, vA+1) / (vB, vB+1)</item>
		<item>محاسبه (vA, vA+1) % (vB, vB+1) و ذخیره نتیجه در جفت ثبت vA, vA+1. همه مقادیر double (ممیز شناور) هستند.\n(vA, vA+1) = (vA, vA+1) % (vB, vB+1)</item>
		<item>محاسبه vB + 0xFFFF و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB + 0xFFFF</item>
		<item>محاسبه 0xFFFF - vB و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = 0xFFFF - vB</item>
		<item>محاسبه vB * 0xFFFF و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB * 0xFFFF</item>
		<item>محاسبه vB / 0xFFFF و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB / 0xFFFF</item>
		<item>محاسبه vB % 0xFFFF و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB % 0xFFFF</item>
		<item>محاسبه vB &amp; 0xFFFF (AND منطقی) و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB &amp; 0xFFFF</item>
		<item>محاسبه vB | 0xFFFF (OR منطقی) و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB | 0xFFFF</item>
		<item>محاسبه vB ^ 0xFFFF (OR انحصاری) و ذخیره نتیجه در ثبت vA. همه مقادیر عدد صحیح هستند.\nvA = vB ^ 0xFFFF</item>
		<item>محاسبه vBB + 0xFF و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB + 0xFF</item>
		<item>محاسبه 0xFF - vBB و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = 0xFF - vBB</item>
		<item>محاسبه vBB * 0xFF و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB * 0xFF</item>
		<item>محاسله vBB / 0xFF و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB / 0xFF</item>
		<item>محاسبه vBB % 0xFF و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB % 0xFF</item>
		<item>محاسبه vBB &amp; 0xFF (AND منطقی) و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB &amp; 0xFF</item>
		<item>محاسبه vBB |  0xFF (OR منطقی) و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB | 0xFF</item>
		<item>محاسبه vBB ^ 0xFF (OR انحصاری) و ذخیره نتیجه در ثبت vAA. همه مقادیر عدد صحیح هستند.\nvAA = vBB ^ 0xFF</item>
		<item>ثبت vBB را بر اساس بیت های مشخص شده توسط 0xFF به سمت چپ منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB &lt;&lt; 0xFF</item>
		<item>ثبت vBB را بر اساس تعداد بیت های مشخص شده توسط 0xFF به سمت راست منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >> 0xFF</item>
		<item>به وضوح vBB را با تعداد بیت های مشخص شده توسط 0xFF به سمت راست منتقل می کند و نتیجه را در ثبت vAA ذخیره می کند. همه مقادیر عدد صحیح هستند.\nvAA = vBB >>> 0xFF</item>
		<item>یک روش امضای چند شکلی را با پارامترها فراخوانی می کند (اجرا می کند). از نسخه 038 در فایل های Dex موجود است.</item>
		<item>یک روش امضای چند شکلی را با پارامترها فراخوانی می‌کند (اجرا می‌کند)، اما پارامترها باید در ثبت های شماره‌دار ترتیبی قرار گیرند. از نسخه 038 در پرونده های Dex موجود است.</item>
		<item>اجازه فراخوانی یک سایت با پارامترها را می دهد (شروع می کند). از نسخه 038 در فایل های Dex موجود است.</item>
		<item>Allows (starts) calling a site with parameters, but the parameters must be contained in registers with numbers in order. Present in Dex files since version 038.</item>
		<item>ارجاع به مدیریت روش (method) را در ثبت vAA قرار می دهد. از نسخه 039 در فایل های Dex موجود است.</item>
		<item>ارجاع به نمونه اولیه روش (method) را در ثبت vAA قرار می دهد. از نسخه 039 در فایل های Dex موجود است.</item>
	</string-array>
	<string-array name="app_theme">
		<item>روشن</item>
		<item>تاریک</item>
		<item>سیاه</item>
	</string-array>
	<string-array name="jadx_sets">
		<item>حالت بازگشتی</item>
		<item>رفع ابهام</item>
		<item>خروج از یونیکد</item>
		<item>نمایش کد متناقض</item>
	</string-array>
	<string-array name="copy_variants">
		<item>تغییر نام</item>
		<item>فقط تغییر نام فایل ها</item>
		<item>جایگزین کردن</item>
		<item>جهش</item>
	</string-array>
	<string-array name="menu_pos">
		<item>چپ</item>
		<item>راست</item>
	</string-array>
	<string-array name="checksum_names">
		<item>همه حروف بزرگ</item>
		<item>جدا سازی با دونقطه</item>
	</string-array>
	<string-array name="refresh_res">
		<item>افزودن منابع جدید (فقط فایل ها)</item>
		<item>حذف منابع از دست رفته</item>
	</string-array>
	<string-array name="sort">
		<item>نام</item>
		<item>نام معکوس</item>
		<item>نوع</item>
		<item>نوع معکوس</item>
		<item>اندازه</item>
		<item>اندازه معکوس</item>
		<item>تاریخ</item>
		<item>تاریخ معکوس</item>
	</string-array>
	<string-array name="resDecodeMode">
		<item>تجزیه نشود</item>
		<item>تجزیه در مسیر اصلی</item>
		<item>تجزیه در یک مسیر جداگانه</item>
        <item>سعی کنید بسته ها را ادغام کنید</item>
	</string-array>
	<string-array name="installLocation">
		<item>تنظیم نشده</item>
		<item>خودکار</item>
		<item>حافظه داخلی</item>
		<item>حافظه خارجی</item>
	</string-array>
	<string-array name="orientation_variants">
		<item>پیش‌فرض</item>
		<item>افقی</item>
		<item>عمودی</item>
	</string-array>
	<string-array name="auto_save_variants">
		<item>خاموش</item>
		<item>۱۵ ثانیه</item>
		<item>۳۰ ثانیه</item>
		<item>۱ دقیقه</item>
		<item>۵ دقیقه</item>
	</string-array>
	<string-array name="to_vector_values">
		<item>تصویر تطبیقی (کیفیت پایین)</item>
		<item>تصویر با کیفیت بالا (اندازه بزرگتر)</item>
		<item>تبدیل به SVG</item>
	</string-array>
	<string-array name="backup_values">
		<item>تنظیمات</item>
		<item>نشانک ها</item>
		<item>تاریخچه جستجو/جایگزینی</item>
		<item>واژه‌نامه‌ها</item>
	</string-array>
	<string-array name="split_dex_items">
		<item>بر اساس تعداد روش ها/فیلد ها</item>
		<item>به قسمت های مساوی</item>
	</string-array>
	<string-array name="editor_themes">
		<item>پیش‌فرض</item>
		<item>جدید</item>
	</string-array>
	<string-array name="aapt2_dump_descr">
		<item>چاپ اطلاعات استخراج شده از مانیفست APK.</item>
		<item>چاپ هر پیکربندی استفاده شده توسط یک منبع در APK.</item>
		<item>چاپ مجوزهای استخراج شده از مانیفست APK.</item>
		<item>چاپ محتویات استخر رشته جدول منابع در APK چاپ کنید.</item>
		<item>چاپ محتویات جدول منابع از APK.</item>
		<item>چاپ منابع &lt;همپوشانی> یک APK.</item>
	</string-array>
	<string-array name="xml_format_variants">
		<item>پیشفرض</item>
		<item>Apktool</item>
		<item>اندروید استودیو</item>
		<item>ترفند ساده</item>
	</string-array>
</resources>
